{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/SingleStudent/components/Card.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport red from '@material-ui/core/colors/red';\nimport DashboardItem from '../../../components/DashboardItem/DashboardItem';\nimport './Card.css';\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      width: '75vw'\n    },\n    title: {\n      fontSize: '35px',\n      minWidth: ''\n    },\n    subheader: {\n      fontSize: '20px'\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    },\n    actions: {\n      display: 'flex'\n    },\n    expand: _defineProperty({\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      marginLeft: 'auto'\n    }, theme.breakpoints.up('sm'), {\n      marginRight: -8\n    }),\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar SingleStudentCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SingleStudentCard, _React$Component);\n\n  function SingleStudentCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleStudentCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleStudentCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: '',\n      status: ''\n    };\n\n    _this.handleExpandClick = function () {\n      _this.setState(function (state) {\n        return {\n          expanded: !state.expanded\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleStudentCard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var today = new Date();\n      var date = this.getMonthAsString(today.getMonth() + 1) + ' ' + today.getDate() + ', ' + today.getFullYear();\n      this.setState({\n        date: date\n      });\n    }\n  }, {\n    key: \"getMonthAsString\",\n    value: function getMonthAsString(monthInInt) {\n      switch (monthInInt) {\n        case 1:\n          return 'January';\n\n        case 2:\n          return 'February';\n\n        case 3:\n          return 'March';\n\n        case 4:\n          return 'April';\n\n        case 5:\n          return 'May';\n\n        case 6:\n          return 'June';\n\n        case 7:\n          return 'July';\n\n        case 8:\n          return 'August';\n\n        case 9:\n          return 'September';\n\n        case 10:\n          return 'October';\n\n        case 11:\n          return 'November';\n\n        case 12:\n          return 'December';\n      }\n    }\n  }, {\n    key: \"renderNoteButton\",\n    value: function renderNoteButton() {\n      if (this.props.role == 'staff') return React.createElement(\"div\", {\n        className: \"singlestudent-card-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(DashboardItem, {\n        destination: \"/addnote\",\n        title: \"Notes\",\n        image: \"/img/message.png\",\n        id: this.props.studentId,\n        name: this.props.name,\n        role: \"staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(DashboardItem, {\n        destination: \"/addhighlight\",\n        title: \"Highlights\",\n        image: \"/img/highlight.png\",\n        id: this.props.studentId,\n        name: this.props.name,\n        role: \"staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));else if (this.props.role == 'parent') return React.createElement(\"div\", {\n        className: \"singlestudent-card-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(DashboardItem, {\n        destination: \"/addnote\",\n        title: \"Notes\",\n        image: \"/img/message.png\",\n        id: this.props.studentId,\n        name: this.props.name,\n        role: \"parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n\n      if (this.props.studentId) {\n        return React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          action: this.renderNoteButton(),\n          classes: {\n            title: classes.title,\n            subheader: classes.subheader\n          },\n          title: this.props.name,\n          subheader: this.state.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return SingleStudentCard;\n}(React.Component);\n\nSingleStudentCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SingleStudentCard);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/SingleStudent/components/Card.jsx"],"names":["React","PropTypes","withStyles","Card","CardHeader","Avatar","red","DashboardItem","styles","theme","card","width","title","fontSize","minWidth","subheader","media","height","paddingTop","actions","display","expand","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","expandOpen","avatar","backgroundColor","root","marginTop","spacing","unit","overflowX","SingleStudentCard","state","date","status","handleExpandClick","setState","expanded","today","Date","getMonthAsString","getMonth","getDate","getFullYear","monthInInt","props","role","studentId","name","classes","renderNoteButton","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport red from '@material-ui/core/colors/red';\nimport DashboardItem from '../../../components/DashboardItem/DashboardItem';\nimport './Card.css';\n\nconst styles = theme => ({\n  card: {\n    width: '75vw',\n  },\n  title: {\n    fontSize: '35px',\n    minWidth: '',\n  },\n  subheader: {\n    fontSize: '20px',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n});\n\nclass SingleStudentCard extends React.Component {\n  state = {\n    date: '',\n    status: '',\n  };\n\n  componentWillMount() {\n    let today = new Date();\n    let date =\n      this.getMonthAsString(today.getMonth() + 1) +\n      ' ' +\n      today.getDate() +\n      ', ' +\n      today.getFullYear();\n\n    this.setState({ date: date });\n  }\n\n  getMonthAsString(monthInInt) {\n    switch (monthInInt) {\n      case 1:\n        return 'January';\n      case 2:\n        return 'February';\n      case 3:\n        return 'March';\n      case 4:\n        return 'April';\n      case 5:\n        return 'May';\n      case 6:\n        return 'June';\n      case 7:\n        return 'July';\n      case 8:\n        return 'August';\n      case 9:\n        return 'September';\n      case 10:\n        return 'October';\n      case 11:\n        return 'November';\n      case 12:\n        return 'December';\n    }\n  }\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  renderNoteButton() {\n    if (this.props.role == 'staff')\n      return (\n        <div className=\"singlestudent-card-icons\">\n          <DashboardItem\n            destination=\"/addnote\"\n            title=\"Notes\"\n            image=\"/img/message.png\"\n            id={this.props.studentId}\n            name={this.props.name}\n            role=\"staff\"\n          />\n          <DashboardItem\n            destination=\"/addhighlight\"\n            title=\"Highlights\"\n            image=\"/img/highlight.png\"\n            id={this.props.studentId}\n            name={this.props.name}\n            role=\"staff\"\n          />\n        </div>\n      );\n    else if (this.props.role == 'parent')\n      return (\n        <div className=\"singlestudent-card-icons\">\n          <DashboardItem\n            destination=\"/addnote\"\n            title=\"Notes\"\n            image=\"/img/message.png\"\n            id={this.props.studentId}\n            name={this.props.name}\n            role=\"parent\"\n          />\n        </div>\n      );\n  }\n\n  render() {\n    const { classes } = this.props;\n    if (this.props.studentId) {\n      return (\n        <Card className={classes.card}>\n          <CardHeader\n            action={this.renderNoteButton()}\n            classes={{\n              title: classes.title,\n              subheader: classes.subheader,\n            }}\n            title={this.props.name}\n            subheader={this.state.date}\n          />\n        </Card>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nSingleStudentCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SingleStudentCard);\n"]},"metadata":{},"sourceType":"module"}