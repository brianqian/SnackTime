{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/AddPotty/AddPotty.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //import classNames from 'classnames';\n\nimport { withStyles } from '@material-ui/core/styles'; // import MenuItem from '@material-ui/core/MenuItem';\n// import TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport HeaderBar from '../../../../components/HeaderBar/HeaderBar'; // import Label from '@material-ui/core/Label';\n// import DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\n// import { Redirect } from 'react-router-dom';\n\nimport Auth from '../../../../utils/Auth';\nimport MultiSelectContainer from '../MultiSelect/MultiSelectContainer';\nimport Timepicker from '../../../../components/TimePicker/TimePicker';\nimport './AddPotty.css';\nimport { Redirect } from 'react-router-dom';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\"; // var bgColors = {\n//   Default: '#81b71a',\n//   Blue: '#00B1E1',\n//   Cyan: '#37BC9B',\n//   Green: '#8CC152',\n//   Red: '#E9573F',\n//   Yellow: '#F6BB42',\n// };\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    submitbutton: {\n      height: 10\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar AddPotty =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddPotty, _React$Component);\n\n  function AddPotty() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddPotty);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddPotty)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //selectedStudents: this.props.location.state.selectedStudents,\n      allStudents: [],\n      studentIdsToSubmit: [],\n      pottyTime: '',\n      place: '',\n      type: '',\n      multiline: 'Controlled',\n      variant: '',\n      clickedDiaper: 'classes.notclickked',\n      clickedPotty: 'classes.notclicked',\n      clickedAccident: 'classes.notclicked',\n      snackbarMessage: 'No student selected.'\n    };\n    _this.timepickerState = React.createRef();\n\n    _this.updateStudents = function (newArray) {\n      _this.setState({\n        allStudents: newArray\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var returnTime, idArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                returnTime = _this.timepickerState.current.returnTime();\n                _context.next = 4;\n                return _this.setState({\n                  pottyTime: returnTime\n                });\n\n              case 4:\n                idArray = [];\n\n                _this.state.allStudents.map(function (student) {\n                  if (student.selected === true) {\n                    idArray.push(student.id);\n                  }\n                });\n\n                console.log(idArray);\n                _context.next = 9;\n                return _this.setState({\n                  studentIdsToSubmit: idArray\n                });\n\n              case 9:\n                if (_this.state.studentIdsToSubmit.length === 0) _this.handleClickSnackbar();else _this.state.studentIdsToSubmit.map(function (id) {\n                  return _this.postPotty(id);\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleClick =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(name, value) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = value;\n                _context2.next = _context2.t0 === 'Diaper' ? 3 : _context2.t0 === 'Potty' ? 5 : _context2.t0 === 'Accident' ? 7 : _context2.t0 === 'Wet' ? 9 : _context2.t0 === 'BM' ? 11 : _context2.t0 === 'Dry' ? 13 : 15;\n                break;\n\n              case 3:\n                _this.setState({\n                  diaperColor: true,\n                  pottyColor: false,\n                  accidentColor: false\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 5:\n                _this.setState({\n                  diaperColor: false,\n                  pottyColor: true,\n                  accidentColor: false\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 7:\n                _this.setState({\n                  diaperColor: false,\n                  pottyColor: false,\n                  accidentColor: true\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 9:\n                _this.setState({\n                  wetColor: true,\n                  bmColor: false,\n                  dryColor: false\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 11:\n                _this.setState({\n                  wetColor: false,\n                  bmColor: true,\n                  dryColor: false\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 13:\n                _this.setState({\n                  wetColor: false,\n                  bmColor: false,\n                  dryColor: true\n                });\n\n                return _context2.abrupt(\"break\", 15);\n\n              case 15:\n                _this.setState(_defineProperty({}, name, value));\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleClickSnackbar = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCloseSnackbar = function (event, reason) {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n\n      setTimeout(_this.reset, 500);\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        snackbarMessage: \"No student selected.\"\n      });\n    };\n\n    _this.postPotty = function (id) {\n      var today = new Date();\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      console.log(date);\n      console.log(\"PLACE\", _this.state.place);\n      console.log(\"TYPE\", _this.state.type);\n      fetch(\"/api/student/\".concat(id, \"/diapering\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          time: _this.state.pottyTime,\n          place: _this.state.pottyPlace,\n          type: _this.state.pottyType,\n          date: date\n        })\n      }).then(function (resp) {\n        console.log(resp);\n        return resp.json();\n      }).then(function (resp) {\n        console.log(\"Resp2:\", resp);\n\n        if (resp.errors) {\n          if (resp.errors.length > 0) {\n            if (resp.errors[0].message === \"Diapering.place cannot be null\") _this.setState({\n              snackbarMessage: \"Please select Potty/Diaper/Accident\"\n            }, _this.handleClickSnackbar());else if (resp.errors[0].message === \"Diapering.type cannot be null\") _this.setState({\n              snackbarMessage: \"Please select BM/Wet/Dry\"\n            }, _this.handleClickSnackbar());\n          }\n        } else if (resp) {\n          _this.setState({\n            snackbarMessage: \"Potty added.\"\n          }, _this.handleClickSnackbar());\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddPotty, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                Auth.StaffAuthorize(this);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n\n      if (this.state.loggedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(HeaderBar, {\n          type: this.state.userType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }), React.createElement(MultiSelectContainer, {\n          orgId: this.state.orgId,\n          allStudents: this.state.allStudents,\n          updateStudents: this.updateStudents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"addpotty-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"addpotty-item1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Timepicker, {\n          ref: this.timepickerState,\n          setTime: this.setPottyTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"addpotty-item2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyPlace\",\n          color: this.state.diaperColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyPlace', 'Diaper');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Diaper\"), React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyPlace\" // color='default'\n          ,\n          color: this.state.pottyColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyPlace', 'Potty');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Potty\"), React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyPlace\" // color='default'\n          ,\n          color: this.state.accidentColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyPlace', 'Accident');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Accident\")), React.createElement(\"div\", {\n          className: \"addpotty-item3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyType\" // color={this.state.wetcolor}\n          ,\n          color: this.state.wetColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyType', 'Wet');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Wet\"), React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyType\" // color='default'\n          ,\n          color: this.state.bmColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyType', 'BM');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"BM\"), React.createElement(Button, {\n          variant: \"contained\",\n          className: \"pottyType\" // color='default'\n          ,\n          color: this.state.dryColor ? 'primary' : 'default',\n          onClick: function onClick() {\n            return _this2.handleClick('pottyType', 'Dry');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Dry\")), React.createElement(Button, {\n          className: classes.submitbutton,\n          onClick: this.handleSubmit,\n          color: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"Add Activity\")), React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          open: this.state.open,\n          autoHideDuration: 6000,\n          onClose: this.handleCloseSnackbar,\n          ContentProps: {\n            \"aria-describedby\": \"message-id\"\n          },\n          message: React.createElement(\"span\", {\n            id: \"message-id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, this.state.snackbarMessage),\n          action: [React.createElement(IconButton, {\n            key: \"close\",\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            className: classes.close,\n            onClick: this.handleCloseSnackbar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }));\n      } else if (this.state.loginRejected) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/notAuthorized\",\n            state: {\n              type: \"Staff\",\n              location: '/dailyreport/addpotty'\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return AddPotty;\n}(React.Component);\n\nAddPotty.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AddPotty);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/AddPotty/AddPotty.jsx"],"names":["React","PropTypes","withStyles","Button","HeaderBar","Auth","MultiSelectContainer","Timepicker","Redirect","Snackbar","IconButton","CloseIcon","styles","theme","container","display","flexWrap","submitbutton","height","textField","marginLeft","spacing","unit","marginRight","width","dense","marginTop","menu","AddPotty","state","allStudents","studentIdsToSubmit","pottyTime","place","type","multiline","variant","clickedDiaper","clickedPotty","clickedAccident","snackbarMessage","timepickerState","createRef","updateStudents","newArray","setState","handleSubmit","event","preventDefault","returnTime","current","idArray","map","student","selected","push","id","console","log","length","handleClickSnackbar","postPotty","handleClick","name","value","diaperColor","pottyColor","accidentColor","wetColor","bmColor","dryColor","open","handleCloseSnackbar","reason","setTimeout","reset","today","Date","date","getFullYear","getMonth","getDate","fetch","method","headers","body","JSON","stringify","time","pottyPlace","pottyType","then","resp","json","errors","message","StaffAuthorize","classes","props","loggedIn","userType","orgId","setPottyTime","vertical","horizontal","close","loginRejected","pathname","location","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n//import classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport HeaderBar from '../../../../components/HeaderBar/HeaderBar';\n// import Label from '@material-ui/core/Label';\n// import DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\n// import { Redirect } from 'react-router-dom';\nimport Auth from '../../../../utils/Auth';\nimport MultiSelectContainer from '../MultiSelect/MultiSelectContainer';\nimport Timepicker from '../../../../components/TimePicker/TimePicker';\nimport './AddPotty.css';\nimport { Redirect } from 'react-router-dom';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n\n// var bgColors = {\n//   Default: '#81b71a',\n//   Blue: '#00B1E1',\n//   Cyan: '#37BC9B',\n//   Green: '#8CC152',\n//   Red: '#E9573F',\n//   Yellow: '#F6BB42',\n// };\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  submitbutton: {\n    height: 10,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass AddPotty extends React.Component {\n  state = {\n    //selectedStudents: this.props.location.state.selectedStudents,\n    allStudents: [],\n    studentIdsToSubmit: [],\n    pottyTime: '',\n    place: '',\n    type: '',\n    multiline: 'Controlled',\n    variant: '',\n    clickedDiaper: 'classes.notclickked',\n    clickedPotty: 'classes.notclicked',\n    clickedAccident: 'classes.notclicked',\n    snackbarMessage: 'No student selected.'\n  };\n\n  async componentWillMount() {\n    Auth.StaffAuthorize(this);\n  }\n\n  timepickerState = React.createRef();\n\n  updateStudents = newArray => {\n    this.setState({ allStudents: newArray });\n  };\n  handleSubmit = async event => {\n    event.preventDefault();\n    const returnTime = this.timepickerState.current.returnTime();\n    await this.setState({ pottyTime: returnTime });\n    let idArray = [];\n    this.state.allStudents.map(student => {\n      if (student.selected === true) {\n        idArray.push(student.id);\n      }\n    });\n    console.log(idArray);\n    await this.setState({ studentIdsToSubmit: idArray });\n    if (this.state.studentIdsToSubmit.length === 0)\n      this.handleClickSnackbar();\n    else this.state.studentIdsToSubmit.map(id => this.postPotty(id));\n  };\n\n  handleClick = async (name, value) => {\n    switch (value) {\n      case 'Diaper':\n        this.setState({ diaperColor: true, pottyColor: false, accidentColor: false });\n        break;\n      case 'Potty':\n        this.setState({ diaperColor: false, pottyColor: true, accidentColor: false });\n        break;\n      case 'Accident':\n        this.setState({ diaperColor: false, pottyColor: false, accidentColor: true });\n        break;\n      case 'Wet':\n        this.setState({ wetColor: true, bmColor: false, dryColor: false });\n        break;\n      case 'BM':\n        this.setState({ wetColor: false, bmColor: true, dryColor: false });\n        break;\n      case 'Dry':\n        this.setState({ wetColor: false, bmColor: false, dryColor: true });\n        break;\n    }\n    this.setState({ [name]: value });\n\n  };\n\n\n  handleClickSnackbar = () => {\n    this.setState({ open: true });\n  };\n  handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n    setTimeout(this.reset, 500)\n  };\n\n  reset = () => {\n    this.setState({ snackbarMessage: \"No student selected.\"})\n  }\n\n  postPotty = id => {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    console.log(date);\n    console.log(`PLACE`, this.state.place);\n    console.log(`TYPE`, this.state.type);\n    fetch(`/api/student/${id}/diapering`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        time: this.state.pottyTime,\n        place: this.state.pottyPlace,\n        type: this.state.pottyType,\n        date: date,\n      }),\n    })\n      .then(resp => {\n        console.log(resp);\n        return resp.json();\n      })\n      .then(resp => {\n        console.log(\"Resp2:\", resp)\n        if (resp.errors) {\n          if (resp.errors.length > 0) {\n            if (resp.errors[0].message === \"Diapering.place cannot be null\")\n              this.setState({ snackbarMessage: \"Please select Potty/Diaper/Accident\" }, this.handleClickSnackbar())\n            else if (resp.errors[0].message === \"Diapering.type cannot be null\")\n              this.setState({ snackbarMessage: \"Please select BM/Wet/Dry\" }, this.handleClickSnackbar())\n          }\n        } else if (resp) {\n          this.setState({ snackbarMessage: \"Potty added.\" },\n            this.handleClickSnackbar()\n          )\n        }\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.loggedIn) {\n      return (\n        <div>\n          <HeaderBar type={this.state.userType} />\n          <MultiSelectContainer\n            orgId={this.state.orgId}\n            allStudents={this.state.allStudents}\n            updateStudents={this.updateStudents}\n          />\n\n          <div className=\"addpotty-container\">\n            <div className=\"addpotty-item1\">\n              <Timepicker ref={this.timepickerState} setTime={this.setPottyTime} />\n            </div>\n            <div className=\"addpotty-item2\">\n              <Button\n                variant=\"contained\"\n                className=\"pottyPlace\"\n                color={this.state.diaperColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick('pottyPlace', 'Diaper')}\n              >\n                Diaper\n              </Button>\n              <Button\n                variant=\"contained\"\n                className=\"pottyPlace\"\n                // color='default'\n                color={this.state.pottyColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick( 'pottyPlace', 'Potty')}\n              >\n                Potty\n              </Button>\n              <Button\n                variant=\"contained\"\n                className=\"pottyPlace\"\n                // color='default'\n                color={this.state.accidentColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick( 'pottyPlace', 'Accident')}\n              >\n                Accident\n              </Button>\n            </div>\n            <div className=\"addpotty-item3\">\n              <Button\n                variant=\"contained\"\n                className=\"pottyType\"\n                // color={this.state.wetcolor}\n                color={this.state.wetColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick( 'pottyType', 'Wet')}\n              >\n                Wet\n              </Button>\n              <Button\n                variant=\"contained\"\n                className=\"pottyType\"\n                // color='default'\n                color={this.state.bmColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick( 'pottyType', 'BM')}\n              >\n                BM\n              </Button>\n              <Button\n                variant=\"contained\"\n                className=\"pottyType\"\n                // color='default'\n                color={this.state.dryColor ? 'primary' : 'default'}\n                onClick={() => this.handleClick('pottyType', 'Dry')}\n              >\n                Dry\n              </Button>\n            </div>\n            <Button\n              className={classes.submitbutton}\n              onClick={this.handleSubmit}\n              color='default'\n            >\n              Add Activity\n            </Button>\n          </div>\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={this.state.open}\n            autoHideDuration={6000}\n            onClose={this.handleCloseSnackbar}\n            ContentProps={{\n              \"aria-describedby\": \"message-id\"\n            }}\n            message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={this.handleCloseSnackbar}\n              >\n                <CloseIcon />\n              </IconButton>\n            ]}\n          />\n        </div>\n      );\n    } else if (this.state.loginRejected) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/notAuthorized\",\n            state: {\n              type: \"Staff\",\n              location: '/dailyreport/addpotty'\n            }\n          }}\n        />\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nAddPotty.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddPotty);\n"]},"metadata":{},"sourceType":"module"}