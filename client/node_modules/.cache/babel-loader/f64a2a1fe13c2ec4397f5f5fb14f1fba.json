{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/DailyReportArchive/DailyReportArchive.jsx\";\nimport React, { Component } from 'react';\nimport Auth from '../../utils/Auth';\nimport { Redirect } from 'react-router';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Calendar from 'react-calendar';\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport HeaderBar from '../../components/HeaderBar/HeaderBar';\nimport moment from \"moment\";\nimport './DailyReportArchive.css';\nimport Grid from '@material-ui/core/Grid';\nimport ResponsiveTable from \"../SingleStudent/components/ResponsiveTable\";\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: indigo[500],\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"75vw\",\n      marginTop: theme.spacing.unit * 3 // overflowX: 'auto',\n\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    childInfo: {\n      margin: \"15px\"\n    },\n    table: {\n      minWidth: 700\n    },\n    searchSubmit: {\n      marginTop: \"25px\"\n    },\n    submitGuardian: {\n      marginTop: \"25px\"\n    },\n    registerParent: {\n      marginTop: \"25px\"\n    },\n    row: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar DailyReportArchive =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DailyReportArchive, _Component);\n\n  function DailyReportArchive() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DailyReportArchive);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DailyReportArchive)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: new Date(),\n      studentId: '',\n      report: {},\n      reportExists: false // name: this.props.location.state.name\n\n    };\n\n    _this.onChange = function (date) {\n      _this.setState({\n        date: date\n      }, function () {\n        var _this2 = this;\n\n        var date = this.state.date.getFullYear() + '-' + (this.state.date.getMonth() + 1) + '-' + this.state.date.getDate();\n        console.log(\"Date: \", date);\n        fetch(\"api/student/\".concat(this.state.studentId, \"/reportconsolidated/\").concat(date)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          return _this2.setState({\n            report: res\n          }, function () {\n            if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0) this.setState({\n              reportExists: true\n            });else this.setState({\n              reportExists: false\n            });\n          });\n        });\n      });\n    };\n\n    _this.componentWillMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var user, _ref2, userType, today, todayDate;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/auth/loggedin');\n\n            case 2:\n              user = _context.sent;\n              _context.next = 5;\n              return user.json();\n\n            case 5:\n              _ref2 = _context.sent;\n              userType = _ref2.userType;\n\n              if (!(userType === 'staff')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 10;\n              return Auth.StaffAuthorize(_assertThisInitialized(_assertThisInitialized(_this)));\n\n            case 10:\n              console.log(_this.state);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return Auth.ParentAuthorize(_assertThisInitialized(_assertThisInitialized(_this)));\n\n            case 15:\n              console.log(_this.state);\n\n            case 16:\n              if (_this.props.location.state) {\n                _this.setState({\n                  studentId: _this.props.location.state.studentId,\n                  name: _this.props.location.state.name\n                });\n              }\n\n              console.log('PROP', _this.props);\n              today = new Date();\n              todayDate = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n              console.log(\"Date: \", todayDate);\n              fetch(\"/api/student/\".concat(_this.state.studentId, \"/reportconsolidated/\").concat(todayDate)).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                return _this.setState({\n                  report: res\n                }, function () {\n                  console.log(res);\n                  if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0) this.setState({\n                    reportExists: true\n                  });else this.setState({\n                    reportExists: false\n                  });\n                });\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.renderFullReport = function () {\n      console.log(\"Full report: \", _this.state.report);\n      console.log(\"report exists: \", _this.state.reportExists);\n      if (!_this.state.reportExists) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"No report available for selected date\"));else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, _this.renderNotesForStaff(), _this.renderNotesForParents(), _this.renderHighlight(), _this.renderDiaperings(), _this.renderMeals(), _this.renderNaps(), _this.renderMeds(), _this.renderIncidents());\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DailyReportArchive, [{\n    key: \"renderIncidents\",\n    value: function renderIncidents() {\n      var allincidents = [];\n      this.state.report.Incidents.map(function (incident) {\n        var incidentRow = [];\n        incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n        allincidents.push(incidentRow);\n      });\n\n      if (this.state.report.Incidents.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Incidents\",\n          columns: [\"Time\", \"Incident\"],\n          data: allincidents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderMeds\",\n    value: function renderMeds() {\n      var allmedicines = [];\n      this.state.report.Medicines.map(function (medicine) {\n        var medicineRow = [];\n        medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n        allmedicines.push(medicineRow);\n      });\n\n      if (this.state.report.Medicines.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Medicines Administered\",\n          data: allmedicines,\n          columns: [\"Time\", \"Medicine\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderNaps\",\n    value: function renderNaps() {\n      var allnaps = [];\n      this.state.report.Naps.map(function (nap) {\n        var napRow = [];\n        napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm: A\"));\n        allnaps.push(napRow);\n      });\n\n      if (this.state.report.Naps.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Naps\",\n          data: allnaps,\n          columns: [\"Start Time\", \"End Time\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderMeals\",\n    value: function renderMeals() {\n      var allMeals = [];\n      this.state.report.Meals.map(function (meal) {\n        var mealRow = [];\n        mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n        allMeals.push(mealRow);\n      });\n\n      if (this.state.report.Meals.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Meals\",\n          data: allMeals,\n          columns: [\"Time\", \"Meal\", \"Food\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderDiaperings\",\n    value: function renderDiaperings() {\n      var allDiaperings = [];\n      this.state.report.Diaperings.map(function (diapering) {\n        var diaperingRow = [];\n        diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n        allDiaperings.push(diaperingRow);\n      });\n\n      if (this.state.report.Diaperings.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Diaper/Toilet\",\n          columns: [\"Time\", \"Place\", \"Type\"],\n          data: allDiaperings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderNotesForStaff\",\n    value: function renderNotesForStaff() {\n      var noteForstaff = [];\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff) noteForstaff.push([this.state.report.Reports[0].noteForStaff]);\n\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Note For Staff\",\n          columns: [\"Note\"],\n          data: noteForstaff,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"renderNotesForParents\",\n    value: function renderNotesForParents() {\n      var noteForparent = [];\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents) noteForparent.push([this.state.report.Reports[0].noteForParents]);\n\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Note For Parents\",\n          columns: [\"Note\"],\n          data: noteForparent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"renderHighlight\",\n    value: function renderHighlight() {\n      var highlight = [];\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight) highlight.push([this.state.report.Reports[0].highlight]);\n\n      if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Highlight of the day\",\n          columns: [\"Highlight\"],\n          data: highlight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n\n      if (this.state.loggedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(HeaderBar, {\n          type: this.props.location.state.role,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, this.state.name, \"'s Report Archive\"), React.createElement(Grid, {\n          container: true,\n          spacing: 0,\n          direction: \"column\",\n          alignItems: \"center\",\n          justify: \"center\",\n          style: {\n            marginTop: '25px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(Calendar, {\n          onChange: this.onChange,\n          value: this.state.date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          container: true,\n          spacing: 0,\n          direction: \"column\",\n          alignItems: \"center\",\n          justify: \"center\",\n          style: {\n            marginTop: '25px',\n            marginBottom: '40px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, this.renderFullReport())));\n      } else if (this.state.loginRejected) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/notAuthorized',\n            state: {\n              location: '/dailyreportarchive'\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return DailyReportArchive;\n}(Component);\n\nDailyReportArchive.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DailyReportArchive); // import React, { Component } from 'react';\n// import Auth from '../../utils/Auth';\n// import { Redirect } from 'react-router';\n// import { withStyles } from \"@material-ui/core/styles\";\n// import Calendar from 'react-calendar'\n// import PropTypes from \"prop-types\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n// import indigo from \"@material-ui/core/colors/indigo\";\n// import HeaderBar from '../../components/HeaderBar/HeaderBar';\n// import moment from \"moment\";\n// import './DailyReportArchive.css'\n// import Grid from '@material-ui/core/Grid';\n// import ResponsiveTable from \"./../SingleStudent/components/ResponsiveTable\"\n// const CustomTableCell = withStyles(theme => ({\n//   head: {\n//     backgroundColor: indigo[500],\n//     color: theme.palette.common.white\n//   },\n//   body: {\n//     fontSize: 14\n//   }\n// }))(TableCell);\n// const styles = theme => ({\n//   root: {\n//     width: \"75vw\",\n//     marginTop: theme.spacing.unit * 3\n//     // overflowX: 'auto',\n//   },\n//   heading: {\n//     fontSize: theme.typography.pxToRem(15),\n//     fontWeight: theme.typography.fontWeightRegular\n//   },\n//   childInfo: {\n//     margin: \"15px\"\n//   },\n//   table: {\n//     minWidth: 700\n//   },\n//   searchSubmit: {\n//     marginTop: \"25px\"\n//   },\n//   submitGuardian: {\n//     marginTop: \"25px\"\n//   },\n//   registerParent: {\n//     marginTop: \"25px\"\n//   },\n//   row: {\n//     \"&:nth-of-type(odd)\": {\n//       backgroundColor: theme.palette.background.default\n//     }\n//   }\n// });\n// class DailyReportArchive extends Component {\n//   state = {\n//     date: new Date(),\n//     studentId: this.props.location.state.studentId,\n//     exists: \"test\",\n//     name: this.props.location.state.name,\n//     mealData: [],\n//     napData: [],\n//     medicineData: [],\n//     diaperingData: [],\n//     incidentData: [],\n//     noteForStaffData: [],\n//     noteForParentsData: [],\n//     highlightData: []\n//   }\n//   onChange = date => {\n//     this.setState({ date }, function () {\n//       let date =\n//         this.state.date.getFullYear() +\n//         '-' +\n//         (this.state.date.getMonth() + 1) +\n//         '-' +\n//         this.state.date.getDate();\n//       console.log(\"Date: \", date);\n//       fetch(`/api/student/${this.state.studentId}/reportconsolidated/${date}`)\n//         .then(res => res.json())\n//         .then(res => this.setState({ report: res }, function () {\n//           if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0)\n//             this.setState({ exists: true })\n//           else\n//             this.setState({ exists: false })\n//         }))\n//     })\n//   }\n//   componentWillMount = async () => {\n//     let user = await fetch('/auth/loggedin');\n//     const { userType } = await user.json();\n//     if (userType === 'staff') {\n//       await Auth.StaffAuthorize(this);\n//       console.log(this.state);\n//     } else {\n//       await Auth.ParentAuthorize(this);\n//       console.log(this.state);\n//     }\n//   };\n//   componentDidMount = () => {\n//     // console.log(\"COMPONENT WILL MOUNT 134235325135\")\n//     // let user = await fetch('/auth/loggedin');\n//     // const { userType } = await user.json();\n//     // if (userType === 'staff') {\n//     //   console.log('authorizing Staff')\n//     //   await Auth.StaffAuthorize(this);\n//     //   console.log('PAGE STATE', this.state);\n//     // } else {\n//     //   console.log('authorizing parent')\n//     //   await Auth.ParentAuthorize(this);\n//     //   console.log(this.state);\n//     // }\n//     // console.log(\"AFTER AUTHORIZING\");\n//     let today = new Date();\n//     let todayDate =\n//       today.getFullYear() +\n//       '-' +\n//       (today.getMonth() + 1) +\n//       '-' +\n//       today.getDate();\n//     console.log(\"Date: \", todayDate);\n//     fetch(`/api/student/${this.state.studentId}/reportconsolidated/${todayDate}`)\n//       .then(res => res.json())\n//       .then(response => {\n//         // if (response.Meals.length > 0 || response.Diaperings.length > 0 || response.Incidents.length > 0 || response.Medicines.length > 0 || response.Naps.length > 0 || response.Reports.length > 0) {\n//         //   // console.log('test')\n//         // }\n//         console.log(\"AFATER FETCH \", response)\n//         this.setState({ report: response }, function () {\n//           console.log(\"This.state.report\", this.state.report)\n//         })\n//         //this.setState({ exists: \"test\" })\n//         // else {\n//         //   this.setState({ exists: false })\n//         // }\n//       })\n//   }\n//   getIncidents() {\n//     let allIncidents = [];\n//     this.state.report.Incidents.map(incident => {\n//       let incidentRow = [];\n//       incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n//       allIncidents.push(incidentRow);\n//     });\n//     this.setState({ incidentData: allIncidents }, this.renderIncidents());\n//   }\n//   renderIncidents() {\n//     const { classes } = this.props;\n//     if (this.state.report.Incidents.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Incidents\"\n//             columns={[\"Time\", \"Incident\"]}\n//             data={this.state.incidentData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n//   getMeds() {\n//     let allMeds = [];\n//     this.state.report.Medicines.map(medicine => {\n//       let medicineRow = [];\n//       medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n//       allMeds.push(medicineRow);\n//     });\n//     this.setState({ medicineData: allMeds }, this.renderMeds());\n//   }\n//   renderMeds() {\n//     const { classes } = this.props;\n//     if (this.state.report.Medicines.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Medicine\"\n//             columns={[\"Time\", \"Medicine Name\"]}\n//             data={this.state.medicineData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n//   getNaps() {\n//     let allNaps = [];\n//     this.state.report.Naps.map(nap => {\n//       let napRow = [];\n//       napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm A\"));\n//       allNaps.push(napRow);\n//     });\n//     this.setState({ napData: allNaps }, this.renderNaps());\n//   }\n//   renderNaps() {\n//     const { classes } = this.props;\n//     if (this.state.report.Naps.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Naps\"\n//             columns={[\"Start Time\", \"End Meal\"]}\n//             data={this.state.napData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n//   getMeals() {\n//     let allMeals = [];\n//     this.state.report.Meals.map(meal => {\n//       let mealRow = [];\n//       mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n//       allMeals.push(mealRow);\n//     });\n//     this.setState({ mealData: allMeals }, this.renderMeals());\n//   }\n//   renderMeals() {\n//     const { classes } = this.props;\n//     if (this.state.report.Meals.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Meals\"\n//             columns={[\"Time\", \"Meal\", \"Food\"]}\n//             data={this.state.mealData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n//   getDiaperings() {\n//     let allDiaperings = [];\n//     this.state.report.Diaperings.map(diapering => {\n//       let diaperingRow = [];\n//       diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n//       allDiaperings.push(diaperingRow);\n//     });\n//     this.setState({ diaperingData: allDiaperings }, this.renderDiaperings());\n//   }\n//   renderDiaperings() {\n//     const { classes } = this.props;\n//     if (this.state.report.Diaperings.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Diaper/Toilet\"\n//             columns={[\"Time\", \"Place\", \"Type\"]}\n//             data={this.state.diaperingData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n//   getNotesForStaff() {\n//     let noteForStaffRow = []\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff)\n//           noteForStaffRow.push(this.state.report.Reports[0].noteForStaff)\n//       }\n//       this.setState({ noteForStaffData: noteForStaffRow }, this.renderNotesForStaff());\n//     }\n//   }\n//   renderNotesForStaff() {\n//     const { classes } = this.props;\n//     if (this.state.report) {\n//       if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff) {\n//         return (<div>\n//         <ResponsiveTable\n//           title=\"Note for Staff\"\n//           columns={[\"Note\"]}\n//           data={this.state.noteForStaffData}\n//           />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//         );\n//       }\n//     }\n//   }\n//   getNotesForParents() {\n//     let noteForParentsRow = []\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents)\n//           noteForParentsRow.push(this.state.report.Reports[0].noteForParents)\n//         }\n//         this.setState({ noteForParentsData: noteForParentsRow }, this.renderNotesForParents());  \n//     }\n//   }\n//   renderNotesForParents() {\n//     const { classes } = this.props;\n//     if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents) {\n//       return (<div>\n//         <ResponsiveTable\n//           title=\"Note for Parents\"\n//           columns={[\"Note\"]}\n//           data={this.state.noteForParentsData}\n//         />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//       );\n//     }\n//   }\n//   getHighlight() {\n//     let highlightRow = []\n//     console.log('IN HIGHLIGHT', this.state);\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight)\n//           highlightRow.push(this.state.report.Reports[0].highlight)\n//       }\n//       this.setState({ highlightData: highlightRow }, this.renderHighlight());\n//   }\n// }\n//   renderHighlight() {\n//     const { classes } = this.props;\n//     if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight) {\n//       return (<div>\n//         <ResponsiveTable\n//           title=\"Highlight of day\"\n//           columns={[\"Highlight\"]}\n//           data={this.state.highlightData}\n//         />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//       );\n//     }\n//   }\n//   renderFullReport = () => {\n//     console.log(\"Full report: \", this.state.report)\n//     console.log(\"report exists: \", this.state.exists)\n//     // if (!this.state.exists)\n//     //   return (<div><p>No report available for selected date</p></div>)\n//     // else {\n//     return (\n//       <div>\n//         {this.getNotesForStaff()}\n//         {this.getNotesForParents()}\n//         {this.getHighlight()}\n//         {this.getDiaperings()}\n//         {this.getMeals()}\n//         {this.getNaps()}\n//         {this.getMeds()}\n//         {this.getIncidents()}\n//       </div>\n//     )\n//     //}\n//   }\n//   render() {\n//     const { classes } = this.props;\n//     if (this.state.loggedIn) {\n//       return <div>\n//         <HeaderBar type={this.props.location.state.role} />\n//         <br />\n//         <h2>{this.state.name}'s Report Archive</h2>\n//         <Grid\n//           container\n//           spacing={0}\n//           direction=\"column\"\n//           alignItems=\"center\"\n//           justify=\"center\"\n//           style={{ marginTop: '25px' }}\n//         >\n//           <Grid item>\n//             <Calendar\n//               onChange={this.onChange}\n//               value={this.state.date}\n//             />\n//           </Grid>\n//         </Grid>\n//         <Grid\n//           container\n//           spacing={0}\n//           direction=\"column\"\n//           alignItems=\"center\"\n//           justify=\"center\"\n//           style={{ marginTop: '25px', marginBottom: '40px' }}\n//         >\n//           <Grid item>\n//             {this.renderFullReport()}\n//           </Grid>\n//         </Grid>\n//       </div>;\n//     } else if (this.state.loginRejected) {\n//       return (\n//         <Redirect\n//           to={{\n//             pathname: '/notAuthorized',\n//             state: { location: '/archive' },\n//           }}\n//         />\n//       );\n//     } else {\n//       return <div />\n//     }\n//   }\n// }\n// DailyReportArchive.propTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n// export default withStyles(styles)(DailyReportArchive);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/DailyReportArchive/DailyReportArchive.jsx"],"names":["React","Component","Auth","Redirect","withStyles","Calendar","PropTypes","Table","TableBody","TableCell","TableHead","TableRow","Paper","indigo","HeaderBar","moment","Grid","ResponsiveTable","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","styles","root","width","marginTop","spacing","unit","heading","typography","pxToRem","fontWeight","fontWeightRegular","childInfo","margin","table","minWidth","searchSubmit","submitGuardian","registerParent","row","background","default","DailyReportArchive","state","date","Date","studentId","report","reportExists","onChange","setState","getFullYear","getMonth","getDate","console","log","fetch","then","res","json","Meals","length","Diaperings","Incidents","Medicines","Naps","Reports","componentWillMount","user","userType","StaffAuthorize","ParentAuthorize","props","location","name","today","todayDate","renderFullReport","renderNotesForStaff","renderNotesForParents","renderHighlight","renderDiaperings","renderMeals","renderNaps","renderMeds","renderIncidents","allincidents","map","incident","incidentRow","push","time","format","allmedicines","medicine","medicineRow","medName","allnaps","nap","napRow","startTime","endTime","allMeals","meal","mealRow","type","food","allDiaperings","diapering","diaperingRow","place","noteForstaff","noteForStaff","noteForparent","noteForParents","highlight","classes","loggedIn","role","marginBottom","loginRejected","pathname","propTypes","object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AAEA,IAAMC,eAAe,GAAGd,UAAU,CAAC,UAAAe,KAAK;AAAA,SAAK;AAC3CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAER,MAAM,CAAC,GAAD,CADnB;AAEJS,MAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC;AAFxB,KADqC;AAK3CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AALqC,GAAL;AAAA,CAAN,CAAV,CAQpBlB,SARoB,CAAxB;;AAUA,IAAMmB,MAAM,GAAG,SAATA,MAAS,CAAAT,KAAK;AAAA,SAAK;AACvBU,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,SAAS,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,GAAqB,CAF5B,CAGJ;;AAHI,KADiB;AAMvBC,IAAAA,OAAO,EAAE;AACPP,MAAAA,QAAQ,EAAER,KAAK,CAACgB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,MAAAA,UAAU,EAAElB,KAAK,CAACgB,UAAN,CAAiBG;AAFtB,KANc;AAUvBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC,KAVY;AAavBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KAbgB;AAgBvBC,IAAAA,YAAY,EAAE;AACZZ,MAAAA,SAAS,EAAE;AADC,KAhBS;AAmBvBa,IAAAA,cAAc,EAAE;AACdb,MAAAA,SAAS,EAAE;AADG,KAnBO;AAsBvBc,IAAAA,cAAc,EAAE;AACdd,MAAAA,SAAS,EAAE;AADG,KAtBO;AAyBvBe,IAAAA,GAAG,EAAE;AACH,4BAAsB;AACpBzB,QAAAA,eAAe,EAAEF,KAAK,CAACI,OAAN,CAAcwB,UAAd,CAAyBC;AADtB;AADnB;AAzBkB,GAAL;AAAA,CAApB;;IAiCMC,kB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADA;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,YAAY,EAAE,KAJR,CAKN;;AALM,K;;UAQRC,Q,GAAW,UAAAL,IAAI,EAAI;AACjB,YAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAJA;AAAF,OAAd,EAAwB,YAAY;AAAA;;AAClC,YAAIA,IAAI,GACN,KAAKD,KAAL,CAAWC,IAAX,CAAgBO,WAAhB,KACA,GADA,IAEC,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,QAAhB,KAA6B,CAF9B,IAGA,GAHA,GAIA,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,OAAhB,EALF;AAMAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,IAAtB;AACAY,QAAAA,KAAK,uBAAgB,KAAKb,KAAL,CAAWG,SAA3B,iCAA2DF,IAA3D,EAAL,CACGa,IADH,CACQ,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,SADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG;AAAA,iBAAI,MAAI,CAACR,QAAL,CAAc;AAAEH,YAAAA,MAAM,EAAEW;AAAV,WAAd,EAA+B,YAAY;AACtD,gBAAIA,GAAG,CAACE,KAAJ,CAAUC,MAAV,GAAmB,CAAnB,IAAwBH,GAAG,CAACI,UAAJ,CAAeD,MAAf,GAAwB,CAAhD,IAAqDH,GAAG,CAACK,SAAJ,CAAcF,MAAd,GAAuB,CAA5E,IAAiFH,GAAG,CAACM,SAAJ,CAAcH,MAAd,GAAuB,CAAxG,IAA6GH,GAAG,CAACO,IAAJ,CAASJ,MAAT,GAAkB,CAA/H,IAAoIH,GAAG,CAACQ,OAAJ,CAAYL,MAAZ,GAAqB,CAA7J,EACE,KAAKX,QAAL,CAAc;AAAEF,cAAAA,YAAY,EAAE;AAAhB,aAAd,EADF,KAGE,KAAKE,QAAL,CAAc;AAAEF,cAAAA,YAAY,EAAE;AAAhB,aAAd;AACH,WALY,CAAJ;AAAA,SAFX;AAQD,OAhBD;AAiBD,K;;UAMDmB,kB;;;;6BAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFX,KAAK,CAAC,gBAAD,CADH;;AAAA;AACfY,cAAAA,IADe;AAAA;AAAA,qBAEQA,IAAI,CAACT,IAAL,EAFR;;AAAA;AAAA;AAEXU,cAAAA,QAFW,SAEXA,QAFW;;AAAA,oBAGfA,QAAQ,KAAK,OAHE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIX1E,IAAI,CAAC2E,cAAL,uDAJW;;AAAA;AAKjBhB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAjB;AALiB;AAAA;;AAAA;AAAA;AAAA,qBAOXhD,IAAI,CAAC4E,eAAL,uDAPW;;AAAA;AAQjBjB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKZ,KAAjB;;AARiB;AAUnB,kBAAI,MAAK6B,KAAL,CAAWC,QAAX,CAAoB9B,KAAxB,EAA8B;AAC5B,sBAAKO,QAAL,CAAc;AAACJ,kBAAAA,SAAS,EAAE,MAAK0B,KAAL,CAAWC,QAAX,CAAoB9B,KAApB,CAA0BG,SAAtC;AAAiD4B,kBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWC,QAAX,CAAoB9B,KAApB,CAA0B+B;AAAjF,iBAAd;AACC;;AACDpB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAKiB,KAAzB;AACIG,cAAAA,KAda,GAcL,IAAI9B,IAAJ,EAdK;AAeb+B,cAAAA,SAfa,GAgBfD,KAAK,CAACxB,WAAN,KACA,GADA,IAECwB,KAAK,CAACvB,QAAN,KAAmB,CAFpB,IAGA,GAHA,GAIAuB,KAAK,CAACtB,OAAN,EApBe;AAqBjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBqB,SAAtB;AACApB,cAAAA,KAAK,wBAAiB,MAAKb,KAAL,CAAWG,SAA5B,iCAA4D8B,SAA5D,EAAL,CACGnB,IADH,CACQ,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG;AAAA,uBAAI,MAAKR,QAAL,CAAc;AAAEH,kBAAAA,MAAM,EAAEW;AAAV,iBAAd,EAA+B,YAAY;AACtDJ,kBAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,sBAAIA,GAAG,CAACE,KAAJ,CAAUC,MAAV,GAAmB,CAAnB,IAAwBH,GAAG,CAACI,UAAJ,CAAeD,MAAf,GAAwB,CAAhD,IAAqDH,GAAG,CAACK,SAAJ,CAAcF,MAAd,GAAuB,CAA5E,IAAiFH,GAAG,CAACM,SAAJ,CAAcH,MAAd,GAAuB,CAAxG,IAA6GH,GAAG,CAACO,IAAJ,CAASJ,MAAT,GAAkB,CAA/H,IAAoIH,GAAG,CAACQ,OAAJ,CAAYL,MAAZ,GAAqB,CAA7J,EACE,KAAKX,QAAL,CAAc;AAAEF,oBAAAA,YAAY,EAAE;AAAhB,mBAAd,EADF,KAGE,KAAKE,QAAL,CAAc;AAAEF,oBAAAA,YAAY,EAAE;AAAhB,mBAAd;AACH,iBANY,CAAJ;AAAA,eAFX;;AAtBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UA2KrB6B,gB,GAAmB,YAAM;AACvBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,MAAKZ,KAAL,CAAWI,MAAxC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKZ,KAAL,CAAWK,YAA1C;AACA,UAAI,CAAC,MAAKL,KAAL,CAAWK,YAAhB,EACE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAL,CAAR,CADF,KAEK;AACH,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAK8B,mBAAL,EADH,EAEG,MAAKC,qBAAL,EAFH,EAGG,MAAKC,eAAL,EAHH,EAIG,MAAKC,gBAAL,EAJH,EAKG,MAAKC,WAAL,EALH,EAMG,MAAKC,UAAL,EANH,EAOG,MAAKC,UAAL,EAPH,EAQG,MAAKC,eAAL,EARH,CADF;AAYD;AACF,K;;;;;;;sCA7JiB;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACA,WAAK3C,KAAL,CAAWI,MAAX,CAAkBgB,SAAlB,CAA4BwB,GAA5B,CAAgC,UAAAC,QAAQ,EAAI;AAC1C,YAAIC,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAACC,IAAZ,CAAiBlF,MAAM,CAACgF,QAAQ,CAACG,IAAV,EAAgB,UAAhB,CAAN,CAAkCC,MAAlC,CAAyC,SAAzC,CAAjB,EAAsEJ,QAAQ,CAACA,QAA/E;AACAF,QAAAA,YAAY,CAACI,IAAb,CAAkBD,WAAlB;AACD,OAJD;;AAKA,UAAI,KAAK9C,KAAL,CAAWI,MAAX,CAAkBgB,SAAlB,CAA4BF,MAA5B,KAAuC,CAA3C,EAA8C;AAC5C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,WAAvB;AAAmC,UAAA,OAAO,EAAE,CAAC,MAAD,EAAS,UAAT,CAA5C;AAAkE,UAAA,IAAI,EAAEyB,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;iCAEY;AACX,UAAIO,YAAY,GAAG,EAAnB;AACA,WAAKlD,KAAL,CAAWI,MAAX,CAAkBiB,SAAlB,CAA4BuB,GAA5B,CAAgC,UAAAO,QAAQ,EAAI;AAC1C,YAAIC,WAAW,GAAG,EAAlB;AACAA,QAAAA,WAAW,CAACL,IAAZ,CAAiBlF,MAAM,CAACsF,QAAQ,CAACH,IAAV,EAAgB,UAAhB,CAAN,CAAkCC,MAAlC,CAAyC,SAAzC,CAAjB,EAAsEE,QAAQ,CAACE,OAA/E;AACAH,QAAAA,YAAY,CAACH,IAAb,CAAkBK,WAAlB;AACD,OAJD;;AAKA,UAAI,KAAKpD,KAAL,CAAWI,MAAX,CAAkBiB,SAAlB,CAA4BH,MAA5B,KAAuC,CAA3C,EAA8C;AAC5C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,wBAAvB;AAAgD,UAAA,IAAI,EAAEgC,YAAtD;AAAoE,UAAA,OAAO,EAAE,CAAC,MAAD,EAAS,UAAT,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;iCAEY;AACX,UAAII,OAAO,GAAG,EAAd;AACA,WAAKtD,KAAL,CAAWI,MAAX,CAAkBkB,IAAlB,CAAuBsB,GAAvB,CAA2B,UAAAW,GAAG,EAAI;AAChC,YAAIC,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAACT,IAAP,CAAYlF,MAAM,CAAC0F,GAAG,CAACE,SAAL,EAAgB,UAAhB,CAAN,CAAkCR,MAAlC,CAAyC,SAAzC,CAAZ,EAAiEpF,MAAM,CAAC0F,GAAG,CAACG,OAAL,EAAc,UAAd,CAAN,CAAgCT,MAAhC,CAAuC,UAAvC,CAAjE;AACAK,QAAAA,OAAO,CAACP,IAAR,CAAaS,MAAb;AACD,OAJD;;AAKA,UAAI,KAAKxD,KAAL,CAAWI,MAAX,CAAkBkB,IAAlB,CAAuBJ,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,MAAvB;AAA8B,UAAA,IAAI,EAAEoC,OAApC;AAA6C,UAAA,OAAO,EAAE,CAAC,YAAD,EAAe,UAAf,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;kCAEa;AACZ,UAAIK,QAAQ,GAAG,EAAf;AACA,WAAK3D,KAAL,CAAWI,MAAX,CAAkBa,KAAlB,CAAwB2B,GAAxB,CAA4B,UAAAgB,IAAI,EAAI;AAClC,YAAIC,OAAO,GAAG,EAAd;AACAA,QAAAA,OAAO,CAACd,IAAR,CAAalF,MAAM,CAAC+F,IAAI,CAACZ,IAAN,EAAY,UAAZ,CAAN,CAA8BC,MAA9B,CAAqC,SAArC,CAAb,EAA8DW,IAAI,CAACE,IAAnE,EAAyEF,IAAI,CAACG,IAA9E;AACAJ,QAAAA,QAAQ,CAACZ,IAAT,CAAcc,OAAd;AACD,OAJD;;AAKA,UAAI,KAAK7D,KAAL,CAAWI,MAAX,CAAkBa,KAAlB,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,OAAvB;AAA+B,UAAA,IAAI,EAAEyC,QAArC;AAA+C,UAAA,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;uCAEkB;AACjB,UAAIK,aAAa,GAAG,EAApB;AACA,WAAKhE,KAAL,CAAWI,MAAX,CAAkBe,UAAlB,CAA6ByB,GAA7B,CAAiC,UAAAqB,SAAS,EAAI;AAC5C,YAAIC,YAAY,GAAG,EAAnB;AACAA,QAAAA,YAAY,CAACnB,IAAb,CAAkBlF,MAAM,CAACoG,SAAS,CAACjB,IAAX,EAAiB,UAAjB,CAAN,CAAmCC,MAAnC,CAA0C,SAA1C,CAAlB,EAAwEgB,SAAS,CAACE,KAAlF,EAAyFF,SAAS,CAACH,IAAnG;AACAE,QAAAA,aAAa,CAACjB,IAAd,CAAmBmB,YAAnB;AACD,OAJD;;AAKA,UAAI,KAAKlE,KAAL,CAAWI,MAAX,CAAkBe,UAAlB,CAA6BD,MAA7B,KAAwC,CAA5C,EAA+C;AAC7C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,eAAvB;AAAuC,UAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhD;AAA2E,UAAA,IAAI,EAAE8C,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF;;;0CAEqB;AACpB,UAAII,YAAY,GAAE,EAAlB;AACA,UAAG,KAAKpE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAkC,CAAlC,IAAuC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6B8C,YAAvE,EACED,YAAY,CAACrB,IAAb,CAAkB,CAAC,KAAK/C,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6B8C,YAA9B,CAAlB;;AAEF,UAAI,KAAKrE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAmC,CAAnC,IAAwC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6B8C,YAAzE,EAAuF;AACrF,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,gBAAvB;AAAwC,UAAA,OAAO,EAAE,CAAC,MAAD,CAAjD;AAA2D,UAAA,IAAI,EAAED,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,CAAR;AAGD,OAJD,MAIO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;4CAEuB;AACtB,UAAIE,aAAa,GAAE,EAAnB;AACA,UAAI,KAAKtE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAmC,CAAnC,IAAwC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BgD,cAAzE,EACED,aAAa,CAACvB,IAAd,CAAmB,CAAC,KAAK/C,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BgD,cAA9B,CAAnB;;AAEF,UAAI,KAAKvE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAmC,CAAnC,IAAwC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BgD,cAAzE,EAAyF;AACvF,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,kBAAvB;AAA0C,UAAA,OAAO,EAAE,CAAC,MAAD,CAAnD;AAA6D,UAAA,IAAI,EAAED,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,CAAR;AAGD,OAJD,MAIO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;sCAEiB;AAChB,UAAIE,SAAS,GAAE,EAAf;AACA,UAAI,KAAKxE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAmC,CAAnC,IAAwC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BiD,SAAzE,EACEA,SAAS,CAACzB,IAAV,CAAe,CAAC,KAAK/C,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BiD,SAA9B,CAAf;;AAEF,UAAI,KAAKxE,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0BL,MAA1B,GAAmC,CAAnC,IAAwC,KAAKlB,KAAL,CAAWI,MAAX,CAAkBmB,OAAlB,CAA0B,CAA1B,EAA6BiD,SAAzE,EAAoF;AAClF,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,sBAAvB;AAA8C,UAAA,OAAO,EAAE,CAAC,WAAD,CAAvD;AAAsE,UAAA,IAAI,EAAEA,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,CAAR;AAGD,OAJD,MAIO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;6BAuBQ;AAAA,UACCC,OADD,GACa,KAAK5C,KADlB,CACC4C,OADD;;AAEP,UAAI,KAAKzE,KAAL,CAAW0E,QAAf,EAAyB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAE,KAAK7C,KAAL,CAAWC,QAAX,CAAoB9B,KAApB,CAA0B2E,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFK,EAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAK3E,KAAL,CAAW+B,IAAhB,sBAHK,EAIL,oBAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,EAAE,CAFX;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,UAAU,EAAC,QAJb;AAKE,UAAA,OAAO,EAAC,QALV;AAME,UAAA,KAAK,EAAE;AAAElD,YAAAA,SAAS,EAAE;AAAb,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AACE,UAAA,QAAQ,EAAE,KAAKyB,QADjB;AAEE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CARF,CAJK,EAmBL,oBAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,OAAO,EAAE,CAFX;AAGE,UAAA,SAAS,EAAC,QAHZ;AAIE,UAAA,UAAU,EAAC,QAJb;AAKE,UAAA,OAAO,EAAC,QALV;AAME,UAAA,KAAK,EAAE;AAAEpB,YAAAA,SAAS,EAAE,MAAb;AAAqB+F,YAAAA,YAAY,EAAE;AAAnC,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK1C,gBAAL,EADH,CARF,CAnBK,CAAP;AAmCD,OApCD,MAoCO,IAAI,KAAKlC,KAAL,CAAW6E,aAAf,EAA8B;AACnC,eACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,QAAQ,EAAE,gBADR;AAEF9E,YAAAA,KAAK,EAAE;AAAE8B,cAAAA,QAAQ,EAAE;AAAZ;AAFL,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OATM,MASA;AACL,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;;EAnR8B/E,S;;AAsRjCgD,kBAAkB,CAACgF,SAAnB,GAA+B;AAC7BN,EAAAA,OAAO,EAAErH,SAAS,CAAC4H,MAAV,CAAiBC;AADG,CAA/B;AAIA,eAAe/H,UAAU,CAACwB,MAAD,CAAV,CAAmBqB,kBAAnB,CAAfsourcesContent":["import React, { Component } from 'react';\nimport Auth from '../../utils/Auth';\nimport { Redirect } from 'react-router';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Calendar from 'react-calendar'\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport HeaderBar from '../../components/HeaderBar/HeaderBar';\nimport moment from \"moment\";\nimport './DailyReportArchive.css'\nimport Grid from '@material-ui/core/Grid';\nimport ResponsiveTable from \"../SingleStudent/components/ResponsiveTable\"\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: indigo[500],\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: \"75vw\",\n    marginTop: theme.spacing.unit * 3\n    // overflowX: 'auto',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  childInfo: {\n    margin: \"15px\"\n  },\n  table: {\n    minWidth: 700\n  },\n  searchSubmit: {\n    marginTop: \"25px\"\n  },\n  submitGuardian: {\n    marginTop: \"25px\"\n  },\n  registerParent: {\n    marginTop: \"25px\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n});\n\n\nclass DailyReportArchive extends Component {\n  state = {\n    date: new Date(),\n    studentId: '',\n    report: {},\n    reportExists: false,\n    // name: this.props.location.state.name\n  }\n\n  onChange = date => {\n    this.setState({ date }, function () {\n      let date =\n        this.state.date.getFullYear() +\n        '-' +\n        (this.state.date.getMonth() + 1) +\n        '-' +\n        this.state.date.getDate();\n      console.log(\"Date: \", date);\n      fetch(`api/student/${this.state.studentId}/reportconsolidated/${date}`)\n        .then(res => res.json())\n        .then(res => this.setState({ report: res }, function () {\n          if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0)\n            this.setState({ reportExists: true })\n          else\n            this.setState({ reportExists: false })\n        }))\n    })\n  }\n\n  // componentDidMount = () => {\n    \n  // }\n\n  componentWillMount = async () => {\n    let user = await fetch('/auth/loggedin');\n    const { userType } = await user.json();\n    if (userType === 'staff') {\n      await Auth.StaffAuthorize(this);\n      console.log(this.state);\n    } else {\n      await Auth.ParentAuthorize(this);\n      console.log(this.state);\n    }\n    if (this.props.location.state){\n      this.setState({studentId: this.props.location.state.studentId, name: this.props.location.state.name})                \n      }\n      console.log('PROP', this.props);\n      let today = new Date();\n      let todayDate =\n        today.getFullYear() +\n        '-' +\n        (today.getMonth() + 1) +\n        '-' +\n        today.getDate();\n      console.log(\"Date: \", todayDate);\n      fetch(`/api/student/${this.state.studentId}/reportconsolidated/${todayDate}`)\n        .then(res => res.json())\n        .then(res => this.setState({ report: res }, function () {\n          console.log(res)\n          if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0)\n            this.setState({ reportExists: true })\n          else\n            this.setState({ reportExists: false })\n        }))\n  };\n\n  renderIncidents() {\n    let allincidents = [];\n    this.state.report.Incidents.map(incident => {\n      let incidentRow = [];\n      incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n      allincidents.push(incidentRow);\n    });\n    if (this.state.report.Incidents.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Incidents\" columns={[\"Time\", \"Incident\"]} data={allincidents} />\n        </div>\n      );\n    }\n  }\n\n  renderMeds() {\n    let allmedicines = [];\n    this.state.report.Medicines.map(medicine => {\n      let medicineRow = [];\n      medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n      allmedicines.push(medicineRow);\n    });\n    if (this.state.report.Medicines.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Medicines Administered\" data={allmedicines} columns={[\"Time\", \"Medicine\"]} />\n        </div>\n      );\n    }\n  }\n\n  renderNaps() {\n    let allnaps = [];\n    this.state.report.Naps.map(nap => {\n      let napRow = [];\n      napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm: A\"));\n      allnaps.push(napRow);\n    });\n    if (this.state.report.Naps.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Naps\" data={allnaps} columns={[\"Start Time\", \"End Time\"]} />\n        </div>\n      );\n    }\n  }\n\n  renderMeals() {\n    let allMeals = [];\n    this.state.report.Meals.map(meal => {\n      let mealRow = [];\n      mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n      allMeals.push(mealRow);\n    });\n    if (this.state.report.Meals.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Meals\" data={allMeals} columns={[\"Time\", \"Meal\", \"Food\"]} />\n        </div>\n      );\n    }\n  }\n\n  renderDiaperings() {\n    let allDiaperings = [];\n    this.state.report.Diaperings.map(diapering => {\n      let diaperingRow = [];\n      diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n      allDiaperings.push(diaperingRow);\n    });\n    if (this.state.report.Diaperings.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Diaper/Toilet\" columns={[\"Time\", \"Place\", \"Type\"]} data={allDiaperings} />\n        </div>\n      );\n    }\n  }\n\n  renderNotesForStaff() {\n    let noteForstaff =[];\n    if(this.state.report.Reports.length >0 && this.state.report.Reports[0].noteForStaff)\n      noteForstaff.push([this.state.report.Reports[0].noteForStaff]);\n\n    if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff) {\n      return (<div>\n          <ResponsiveTable title=\"Note For Staff\" columns={[\"Note\"]} data={noteForstaff} />\n        </div>)\n    } else {\n      return (\n        <div></div>\n      );\n    }\n  }\n\n  renderNotesForParents() {\n    let noteForparent =[];\n    if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents)\n      noteForparent.push([this.state.report.Reports[0].noteForParents])\n\n    if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents) {\n      return (<div>\n          <ResponsiveTable title=\"Note For Parents\" columns={[\"Note\"]} data={noteForparent} />\n        </div>)\n    } else {\n      return (\n        <div></div>\n      );\n    }\n  }\n\n  renderHighlight() {\n    let highlight =[];\n    if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight)\n      highlight.push([this.state.report.Reports[0].highlight])\n\n    if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight) {\n      return (<div>\n          <ResponsiveTable title=\"Highlight of the day\" columns={[\"Highlight\"]} data={highlight} />\n        </div>)\n    } else {\n      return (\n        <div></div>\n      );\n    }\n  }\n\n  renderFullReport = () => {\n    console.log(\"Full report: \", this.state.report)\n    console.log(\"report exists: \", this.state.reportExists)\n    if (!this.state.reportExists)\n      return (<div><p>No report available for selected date</p></div>)\n    else {\n      return (\n        <div>\n          {this.renderNotesForStaff()}\n          {this.renderNotesForParents()}\n          {this.renderHighlight()}\n          {this.renderDiaperings()}\n          {this.renderMeals()}\n          {this.renderNaps()}\n          {this.renderMeds()}\n          {this.renderIncidents()}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.loggedIn) {\n      return <div>\n        <HeaderBar type={this.props.location.state.role} />\n        <br />\n        <h2>{this.state.name}'s Report Archive</h2>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ marginTop: '25px' }}\n        >\n          <Grid item>\n            <Calendar\n              onChange={this.onChange}\n              value={this.state.date}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ marginTop: '25px', marginBottom: '40px' }}\n        >\n          <Grid item>\n            {this.renderFullReport()}\n          </Grid>\n        </Grid>\n\n\n\n      </div>;\n    } else if (this.state.loginRejected) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/notAuthorized',\n            state: { location: '/dailyreportarchive' },\n          }}\n        />\n      );\n    } else {\n      return <div />\n    }\n  }\n}\n\nDailyReportArchive.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DailyReportArchive);\n\n\n\n\n// import React, { Component } from 'react';\n// import Auth from '../../utils/Auth';\n// import { Redirect } from 'react-router';\n// import { withStyles } from \"@material-ui/core/styles\";\n// import Calendar from 'react-calendar'\n// import PropTypes from \"prop-types\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n// import indigo from \"@material-ui/core/colors/indigo\";\n// import HeaderBar from '../../components/HeaderBar/HeaderBar';\n// import moment from \"moment\";\n// import './DailyReportArchive.css'\n// import Grid from '@material-ui/core/Grid';\n// import ResponsiveTable from \"./../SingleStudent/components/ResponsiveTable\"\n\n// const CustomTableCell = withStyles(theme => ({\n//   head: {\n//     backgroundColor: indigo[500],\n//     color: theme.palette.common.white\n//   },\n//   body: {\n//     fontSize: 14\n//   }\n// }))(TableCell);\n\n// const styles = theme => ({\n//   root: {\n//     width: \"75vw\",\n//     marginTop: theme.spacing.unit * 3\n//     // overflowX: 'auto',\n//   },\n//   heading: {\n//     fontSize: theme.typography.pxToRem(15),\n//     fontWeight: theme.typography.fontWeightRegular\n//   },\n//   childInfo: {\n//     margin: \"15px\"\n//   },\n//   table: {\n//     minWidth: 700\n//   },\n//   searchSubmit: {\n//     marginTop: \"25px\"\n//   },\n//   submitGuardian: {\n//     marginTop: \"25px\"\n//   },\n//   registerParent: {\n//     marginTop: \"25px\"\n//   },\n//   row: {\n//     \"&:nth-of-type(odd)\": {\n//       backgroundColor: theme.palette.background.default\n//     }\n//   }\n// });\n\n\n// class DailyReportArchive extends Component {\n//   state = {\n//     date: new Date(),\n//     studentId: this.props.location.state.studentId,\n\n//     exists: \"test\",\n//     name: this.props.location.state.name,\n//     mealData: [],\n//     napData: [],\n//     medicineData: [],\n//     diaperingData: [],\n//     incidentData: [],\n//     noteForStaffData: [],\n//     noteForParentsData: [],\n//     highlightData: []\n//   }\n\n//   onChange = date => {\n//     this.setState({ date }, function () {\n//       let date =\n//         this.state.date.getFullYear() +\n//         '-' +\n//         (this.state.date.getMonth() + 1) +\n//         '-' +\n//         this.state.date.getDate();\n//       console.log(\"Date: \", date);\n//       fetch(`/api/student/${this.state.studentId}/reportconsolidated/${date}`)\n//         .then(res => res.json())\n//         .then(res => this.setState({ report: res }, function () {\n//           if (res.Meals.length > 0 || res.Diaperings.length > 0 || res.Incidents.length > 0 || res.Medicines.length > 0 || res.Naps.length > 0 || res.Reports.length > 0)\n//             this.setState({ exists: true })\n//           else\n//             this.setState({ exists: false })\n//         }))\n//     })\n//   }\n\n//   componentWillMount = async () => {\n//     let user = await fetch('/auth/loggedin');\n//     const { userType } = await user.json();\n//     if (userType === 'staff') {\n//       await Auth.StaffAuthorize(this);\n//       console.log(this.state);\n//     } else {\n//       await Auth.ParentAuthorize(this);\n//       console.log(this.state);\n//     }\n//   };\n\n//   componentDidMount = () => {\n//     // console.log(\"COMPONENT WILL MOUNT 134235325135\")\n//     // let user = await fetch('/auth/loggedin');\n//     // const { userType } = await user.json();\n//     // if (userType === 'staff') {\n//     //   console.log('authorizing Staff')\n//     //   await Auth.StaffAuthorize(this);\n//     //   console.log('PAGE STATE', this.state);\n//     // } else {\n//     //   console.log('authorizing parent')\n//     //   await Auth.ParentAuthorize(this);\n//     //   console.log(this.state);\n//     // }\n//     // console.log(\"AFTER AUTHORIZING\");\n//     let today = new Date();\n//     let todayDate =\n//       today.getFullYear() +\n//       '-' +\n//       (today.getMonth() + 1) +\n//       '-' +\n//       today.getDate();\n//     console.log(\"Date: \", todayDate);\n//     fetch(`/api/student/${this.state.studentId}/reportconsolidated/${todayDate}`)\n//       .then(res => res.json())\n//       .then(response => {\n//         // if (response.Meals.length > 0 || response.Diaperings.length > 0 || response.Incidents.length > 0 || response.Medicines.length > 0 || response.Naps.length > 0 || response.Reports.length > 0) {\n//         //   // console.log('test')\n//         // }\n//         console.log(\"AFATER FETCH \", response)\n//         this.setState({ report: response }, function () {\n//           console.log(\"This.state.report\", this.state.report)\n//         })\n//         //this.setState({ exists: \"test\" })\n//         // else {\n//         //   this.setState({ exists: false })\n//         // }\n//       })\n//   }\n\n//   getIncidents() {\n//     let allIncidents = [];\n//     this.state.report.Incidents.map(incident => {\n//       let incidentRow = [];\n//       incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n//       allIncidents.push(incidentRow);\n//     });\n//     this.setState({ incidentData: allIncidents }, this.renderIncidents());\n//   }\n\n//   renderIncidents() {\n//     const { classes } = this.props;\n//     if (this.state.report.Incidents.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Incidents\"\n//             columns={[\"Time\", \"Incident\"]}\n//             data={this.state.incidentData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n\n//   getMeds() {\n//     let allMeds = [];\n//     this.state.report.Medicines.map(medicine => {\n//       let medicineRow = [];\n//       medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n//       allMeds.push(medicineRow);\n//     });\n//     this.setState({ medicineData: allMeds }, this.renderMeds());\n//   }\n\n//   renderMeds() {\n//     const { classes } = this.props;\n//     if (this.state.report.Medicines.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Medicine\"\n//             columns={[\"Time\", \"Medicine Name\"]}\n//             data={this.state.medicineData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n\n//   getNaps() {\n//     let allNaps = [];\n//     this.state.report.Naps.map(nap => {\n//       let napRow = [];\n//       napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm A\"));\n//       allNaps.push(napRow);\n//     });\n//     this.setState({ napData: allNaps }, this.renderNaps());\n//   }\n\n//   renderNaps() {\n//     const { classes } = this.props;\n//     if (this.state.report.Naps.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Naps\"\n//             columns={[\"Start Time\", \"End Meal\"]}\n//             data={this.state.napData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n\n//   getMeals() {\n//     let allMeals = [];\n//     this.state.report.Meals.map(meal => {\n//       let mealRow = [];\n//       mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n//       allMeals.push(mealRow);\n//     });\n//     this.setState({ mealData: allMeals }, this.renderMeals());\n\n//   }\n\n//   renderMeals() {\n//     const { classes } = this.props;\n//     if (this.state.report.Meals.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Meals\"\n//             columns={[\"Time\", \"Meal\", \"Food\"]}\n//             data={this.state.mealData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n\n//   getDiaperings() {\n//     let allDiaperings = [];\n//     this.state.report.Diaperings.map(diapering => {\n//       let diaperingRow = [];\n//       diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n//       allDiaperings.push(diaperingRow);\n//     });\n//     this.setState({ diaperingData: allDiaperings }, this.renderDiaperings());\n//   }\n\n//   renderDiaperings() {\n//     const { classes } = this.props;\n//     if (this.state.report.Diaperings.length === 0) {\n//       return <div />;\n//     } else {\n//       return (\n//         <div>\n//           <ResponsiveTable\n//             title=\"Diaper/Toilet\"\n//             columns={[\"Time\", \"Place\", \"Type\"]}\n//             data={this.state.diaperingData}\n//           />\n//         </div>\n//       );\n//     }\n//   }\n\n//   getNotesForStaff() {\n//     let noteForStaffRow = []\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff)\n//           noteForStaffRow.push(this.state.report.Reports[0].noteForStaff)\n//       }\n//       this.setState({ noteForStaffData: noteForStaffRow }, this.renderNotesForStaff());\n//     }\n\n\n//   }\n\n//   renderNotesForStaff() {\n//     const { classes } = this.props;\n//     if (this.state.report) {\n//       if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForStaff) {\n//         return (<div>\n//         <ResponsiveTable\n//           title=\"Note for Staff\"\n//           columns={[\"Note\"]}\n//           data={this.state.noteForStaffData}\n//           />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//         );\n//       }\n//     }\n//   }\n\n//   getNotesForParents() {\n//     let noteForParentsRow = []\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents)\n//           noteForParentsRow.push(this.state.report.Reports[0].noteForParents)\n//         }\n//         this.setState({ noteForParentsData: noteForParentsRow }, this.renderNotesForParents());  \n//     }\n//   }\n//   renderNotesForParents() {\n//     const { classes } = this.props;\n//     if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].noteForParents) {\n//       return (<div>\n//         <ResponsiveTable\n//           title=\"Note for Parents\"\n//           columns={[\"Note\"]}\n//           data={this.state.noteForParentsData}\n//         />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//       );\n//     }\n//   }\n\n//   getHighlight() {\n//     let highlightRow = []\n//     console.log('IN HIGHLIGHT', this.state);\n//     if (this.state.report) {\n//       if (this.state.report.Reports) {\n//         if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight)\n//           highlightRow.push(this.state.report.Reports[0].highlight)\n//       }\n//       this.setState({ highlightData: highlightRow }, this.renderHighlight());\n//   }\n// }\n\n//   renderHighlight() {\n//     const { classes } = this.props;\n//     if (this.state.report.Reports.length > 0 && this.state.report.Reports[0].highlight) {\n//       return (<div>\n//         <ResponsiveTable\n//           title=\"Highlight of day\"\n//           columns={[\"Highlight\"]}\n//           data={this.state.highlightData}\n//         />\n//       </div>)\n//     } else {\n//       return (\n//         <div></div>\n//       );\n//     }\n//   }\n\n//   renderFullReport = () => {\n//     console.log(\"Full report: \", this.state.report)\n//     console.log(\"report exists: \", this.state.exists)\n//     // if (!this.state.exists)\n//     //   return (<div><p>No report available for selected date</p></div>)\n//     // else {\n//     return (\n//       <div>\n//         {this.getNotesForStaff()}\n//         {this.getNotesForParents()}\n//         {this.getHighlight()}\n//         {this.getDiaperings()}\n//         {this.getMeals()}\n//         {this.getNaps()}\n//         {this.getMeds()}\n//         {this.getIncidents()}\n//       </div>\n//     )\n//     //}\n//   }\n\n//   render() {\n//     const { classes } = this.props;\n//     if (this.state.loggedIn) {\n//       return <div>\n//         <HeaderBar type={this.props.location.state.role} />\n//         <br />\n//         <h2>{this.state.name}'s Report Archive</h2>\n//         <Grid\n//           container\n//           spacing={0}\n//           direction=\"column\"\n//           alignItems=\"center\"\n//           justify=\"center\"\n//           style={{ marginTop: '25px' }}\n//         >\n//           <Grid item>\n//             <Calendar\n//               onChange={this.onChange}\n//               value={this.state.date}\n//             />\n//           </Grid>\n//         </Grid>\n//         <Grid\n//           container\n//           spacing={0}\n//           direction=\"column\"\n//           alignItems=\"center\"\n//           justify=\"center\"\n//           style={{ marginTop: '25px', marginBottom: '40px' }}\n//         >\n//           <Grid item>\n//             {this.renderFullReport()}\n//           </Grid>\n//         </Grid>\n\n\n\n//       </div>;\n//     } else if (this.state.loginRejected) {\n//       return (\n//         <Redirect\n//           to={{\n//             pathname: '/notAuthorized',\n//             state: { location: '/archive' },\n//           }}\n//         />\n//       );\n//     } else {\n//       return <div />\n//     }\n//   }\n// }\n\n// DailyReportArchive.propTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n\n// export default withStyles(styles)(DailyReportArchive);\n"]},"metadata":{},"sourceType":"module"}