{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/AddStudent/AddStudent.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport TextField from \"@material-ui/core/TextField\";\nimport StudentDOB from \"./components/NativeSelect\";\nimport HeaderBar from \"../../../components/HeaderBar/HeaderBar\";\nimport Auth from \"../../../utils/Auth\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      color: '#FFFFFF'\n    },\n    container: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      gridTemplateRows: \"repeat(4, 1fr)\",\n      padding: \"0 10px\",\n      width: \"75vw\",\n      margin: \"auto\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    one: {\n      gridRow: 1\n    },\n    two: {\n      gridColumnEnd: \"4\",\n      gridRow: 1\n    },\n    rowTwo: {\n      gridRow: 2\n    },\n    rowThree: {\n      gridRow: 3\n    },\n    button: {\n      gridRow: 4,\n      gridColumn: \"2/4\",\n      background: \"transparent\",\n      boxShadow: \"0 0 0\"\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    },\n    close: {\n      padding: theme.spacing.unit / 2\n    },\n    center: {}\n  };\n};\n\nvar OutlinedTextFields =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OutlinedTextFields, _React$Component);\n\n  function OutlinedTextFields() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OutlinedTextFields);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OutlinedTextFields)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      month: \"\",\n      day: \"\",\n      year: \"\",\n      notes: \"\",\n      allergies: \"\",\n      meds: \"\",\n      doctor: \"\",\n      address: \"\",\n      city: \"\",\n      zip: \"\",\n      orgId: \"\",\n      loggedIn: false,\n      loginRejected: false,\n      multiline: \"Controlled\" //staffs:[]\n\n    };\n\n    _this.componentWillMount = function () {\n      Auth.StaffAuthorize(_assertThisInitialized(_assertThisInitialized(_this)));\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleSelectorChange = function (type, data) {\n      console.log(\"Inside handleSelectorChangex\");\n      console.log(\"data: \", data);\n      console.log(\"type: \", type);\n\n      if (type[0] === \"month\") {\n        console.log(\"inside month\");\n\n        _this.setState({\n          month: data\n        });\n      } else if (type[0] === \"day\") {\n        console.log(\"inside day\");\n\n        _this.setState({\n          day: data\n        });\n      } else if (type[0] === \"year\") {\n        console.log(\"inside year\");\n\n        _this.setState({\n          year: data\n        });\n      }\n    };\n\n    _this.capitalize = function (name) {\n      var names = name.split(\" \");\n\n      for (var i = 0; i < names.length; i++) {\n        names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n      }\n\n      return names.join(\" \");\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      fetch(\"/api/student\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: _this.capitalize(_this.state.firstName + \" \" + _this.state.lastName),\n          address: \"\".concat(_this.state.address, \",  \").concat(_this.state.city, \", \").concat(_this.state.state, \" \").concat(_this.state.zip),\n          dob: \"\".concat(_this.state.month, \", \").concat(_this.state.day, \", \").concat(_this.state.year),\n          notes: _this.state.notes,\n          allergies: _this.state.allergies,\n          medication: _this.state.meds,\n          doctor: _this.capitalize(_this.state.doctor),\n          orgId: _this.state.orgId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n\n        if (result.name !== \"SequelizeValidationError\") {\n          _this.handleClick();\n        }\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OutlinedTextFields, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(HeaderBar, {\n        type: \"staff\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"outlined-name\",\n        label: \"First Name\",\n        name: \"firstName\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.one),\n        value: this.state.firstName,\n        onChange: this.handleChange(\"firstName\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-name\",\n        label: \"Last Name\",\n        name: \"lastName\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.one),\n        value: this.state.lastName,\n        onChange: this.handleChange(\"lastName\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(StudentDOB, {\n        required: true,\n        id: \"outlined-birthday\",\n        label: \"DOB\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.two),\n        value: this.state.dob,\n        onChange: this.handleSelectorChange,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-notes\",\n        label: \"Notes\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowTwo),\n        value: this.state.notes,\n        onChange: this.handleChange(\"notes\"),\n        multiline: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-allergies\",\n        label: \"Allergies\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowTwo),\n        value: this.state.allergies,\n        onChange: this.handleChange(\"allergies\"),\n        multiline: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-meds\",\n        label: \"Medications\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowTwo),\n        value: this.state.meds,\n        onChange: this.handleChange(\"meds\"),\n        multiline: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-doctor\",\n        label: \"Doctor\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowTwo),\n        value: this.state.doctor,\n        onChange: this.handleChange(\"doctor\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-address\",\n        label: \"Address\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowThree),\n        value: this.state.address,\n        onChange: this.handleChange(\"address\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-city\",\n        label: \"City\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowThree),\n        value: this.state.city,\n        onChange: this.handleChange(\"city\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-city\",\n        label: \"State\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowThree),\n        value: this.state.state,\n        onChange: this.handleChange(\"state\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-zip\",\n        label: \"Zip / Postal Code\",\n        defaultValue: \"\",\n        className: \"\".concat(classes.textField, \" \").concat(classes.rowThree),\n        value: this.state.zip,\n        onChange: this.handleChange(\"zip\"),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        onClick: this.handleSubmit,\n        className: \"\".concat(classes.button),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(SaveIcon, {\n        className: classNames(classes.leftIcon, classes.iconSmall),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), \"Save\")), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, \"Student Added\"),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OutlinedTextFields;\n}(React.Component);\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(OutlinedTextFields);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/AddStudent/AddStudent.jsx"],"names":["React","PropTypes","classNames","Button","withStyles","SaveIcon","TextField","StudentDOB","HeaderBar","Auth","Snackbar","IconButton","CloseIcon","styles","theme","root","color","container","display","gridTemplateColumns","gridTemplateRows","padding","width","margin","textField","marginLeft","spacing","unit","marginRight","one","gridRow","two","gridColumnEnd","rowTwo","rowThree","button","gridColumn","background","boxShadow","dense","marginTop","menu","close","center","OutlinedTextFields","state","firstName","lastName","month","day","year","notes","allergies","meds","doctor","address","city","zip","orgId","loggedIn","loginRejected","multiline","componentWillMount","StaffAuthorize","handleChange","name","event","setState","target","value","handleSelectorChange","type","data","console","log","capitalize","names","split","i","length","charAt","toUpperCase","slice","join","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","dob","medication","then","res","json","result","handleClick","open","handleClose","reason","classes","props","leftIcon","iconSmall","vertical","horizontal","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport TextField from \"@material-ui/core/TextField\";\nimport StudentDOB from \"./components/NativeSelect\";\nimport HeaderBar from \"../../../components/HeaderBar/HeaderBar\";\nimport Auth from \"../../../utils/Auth\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  root: {\n    color: '#FFFFFF'\n  },\n  container: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(4, 1fr)\",\n    gridTemplateRows: \"repeat(4, 1fr)\",\n    padding: \"0 10px\",\n    width: \"75vw\",\n    margin: \"auto\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  one: {\n\n    gridRow: 1\n  },\n  two: {\n    gridColumnEnd: \"4\",\n    gridRow: 1\n  },\n  rowTwo: {\n\n    gridRow: 2\n  },\n  rowThree: {\n\n    gridRow: 3\n  },\n  button: {\n    gridRow: 4,\n    gridColumn: \"2/4\",\n    background: \"transparent\",\n    boxShadow: \"0 0 0\"\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  close: {\n    padding: theme.spacing.unit / 2\n  },\n  center: {\n  \n  }\n});\n\nclass OutlinedTextFields extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    month: \"\",\n    day: \"\",\n    year: \"\",\n    notes: \"\",\n    allergies: \"\",\n    meds: \"\",\n    doctor: \"\",\n    address: \"\",\n    city: \"\",\n    zip: \"\",\n    orgId: \"\",\n    loggedIn: false,\n    loginRejected: false,\n    multiline: \"Controlled\"\n    //staffs:[]\n  };\n\n  componentWillMount = () => {\n    Auth.StaffAuthorize(this);\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleSelectorChange = (type, data) => {\n    console.log(\"Inside handleSelectorChangex\");\n    console.log(\"data: \", data);\n    console.log(\"type: \", type);\n    if (type[0] === \"month\") {\n      console.log(\"inside month\");\n      this.setState({ month: data });\n    } else if (type[0] === \"day\") {\n      console.log(\"inside day\");\n      this.setState({ day: data });\n    } else if (type[0] === \"year\") {\n      console.log(\"inside year\");\n      this.setState({ year: data });\n    }\n  };\n\n  capitalize = name => {\n    const names = name.split(\" \");\n    for (var i = 0; i < names.length; i++) {\n      names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n    }\n    return names.join(\" \");\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    fetch(`/api/student`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: this.capitalize(this.state.firstName + \" \" + this.state.lastName),\n        address: `${this.state.address},  ${this.state.city}, ${this.state.state} ${this.state.zip}`,\n        dob: `${this.state.month}, ${this.state.day}, ${this.state.year}`,\n        notes: this.state.notes,\n        allergies: this.state.allergies,\n        medication: this.state.meds,\n        doctor: this.capitalize(this.state.doctor),\n        orgId: this.state.orgId\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        console.log(result);\n        if (result.name !== \"SequelizeValidationError\") {\n          this.handleClick();\n        }\n      });\n  };\n\n  handleClick = () => {\n    this.setState({ open: true });\n  };\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.center}>\n        <HeaderBar type='staff' />\n        <form className={classes.container} noValidate autoComplete=\"off\">\n          <TextField\n            required\n            id=\"outlined-name\"\n            label=\"First Name\"\n            name=\"firstName\"\n            className={`${classes.textField} ${classes.one}`}\n            value={this.state.firstName}\n            onChange={this.handleChange(\"firstName\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            required\n            id=\"outlined-name\"\n            label=\"Last Name\"\n            name=\"lastName\"\n            className={`${classes.textField} ${classes.one}`}\n            value={this.state.lastName}\n            onChange={this.handleChange(\"lastName\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <StudentDOB\n            required\n            id=\"outlined-birthday\"\n            label=\"DOB\"\n            className={`${classes.textField} ${classes.two}`}\n            value={this.state.dob}\n            onChange={this.handleSelectorChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-notes\"\n            label=\"Notes\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowTwo}`}\n            value={this.state.notes}\n            onChange={this.handleChange(\"notes\")}\n            multiline\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-allergies\"\n            label=\"Allergies\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowTwo}`}\n            value={this.state.allergies}\n            onChange={this.handleChange(\"allergies\")}\n            multiline\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-meds\"\n            label=\"Medications\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowTwo}`}\n            value={this.state.meds}\n            onChange={this.handleChange(\"meds\")}\n            multiline\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-doctor\"\n            label=\"Doctor\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowTwo}`}\n            value={this.state.doctor}\n            onChange={this.handleChange(\"doctor\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-address\"\n            label=\"Address\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowThree}`}\n            value={this.state.address}\n            onChange={this.handleChange(\"address\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-city\"\n            label=\"City\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowThree}`}\n            value={this.state.city}\n            onChange={this.handleChange(\"city\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-city\"\n            label=\"State\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowThree}`}\n            value={this.state.state}\n            onChange={this.handleChange(\"state\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"outlined-zip\"\n            label=\"Zip / Postal Code\"\n            defaultValue=\"\"\n            className={`${classes.textField} ${classes.rowThree}`}\n            value={this.state.zip}\n            onChange={this.handleChange(\"zip\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          {/* <InputLabel htmlFor=\"age-simple\">Staff</InputLabel>\n          <Select\n            native\n            name='staff'\n            value=\"\"\n            //onChange={this.handleChange}\n            inputProps={{\n              name: 'staff',\n              id: 'age-simple',\n            }}\n          >\n          <option value=\"\"></option>\n          <option></option>\n\n          </Select> */}\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            onClick={this.handleSubmit}\n            className={`${classes.button}`}\n          >\n            <SaveIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Save\n          </Button>\n        </form>\n        {/* <Button onClick={this.handleClick}>Open simple snackbar</Button> */}\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">Student Added</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n"]},"metadata":{},"sourceType":"module"}