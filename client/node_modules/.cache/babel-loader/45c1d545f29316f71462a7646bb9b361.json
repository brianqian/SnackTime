{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/MultiSelect/MultiSelectContainer.jsx\";\nimport React, { Component } from \"react\";\nimport MultiSelectItem from \"./MultiSelectItem\";\nimport \"./MultiSelectContainer.css\";\n\nvar MultiSelectContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultiSelectContainer, _Component);\n\n  function MultiSelectContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MultiSelectContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MultiSelectContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allStudents: [],\n      allSelected: false\n    };\n\n    _this.selectStudent = function (e) {\n      var item = e.currentTarget;\n      console.log(item);\n      console.log(e.target.getAttribute('value'));\n\n      var studentArray = _this.state.allStudents.slice();\n\n      console.log('STUDENT ARRAY', studentArray);\n\n      if (item.classList.contains(\"selected\")) {\n        var result = studentArray.find(function (student) {\n          return student.id == item.getAttribute(\"value\");\n        });\n        result.selected = false;\n      } else {\n        var _result = studentArray.find(function (student) {\n          return student.id == item.getAttribute(\"value\");\n        });\n\n        _result.selected = true;\n      } // this.setState({ allStudents: studentArray });\n\n\n      item.classList.toggle(\"selected\");\n    };\n\n    _this.selectAll = function () {\n      var studentArray = _this.state.allStudents.slice();\n\n      if (!_this.state.allSelected) {\n        studentArray.forEach(function (student) {\n          return student.selected = true;\n        });\n\n        _this.setState({\n          allSelected: true\n        });\n      } else {\n        studentArray.forEach(function (student) {\n          return student.selected = false;\n        });\n\n        _this.setState({\n          allSelected: false\n        });\n      }\n\n      _this.setState({\n        allStudents: studentArray\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiSelectContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getAllStudents();\n    }\n  }, {\n    key: \"getAllStudents\",\n    value: function () {\n      var _getAllStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, stateArray;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/api/student/\".concat(this.props.orgId));\n\n              case 2:\n                _context.next = 4;\n                return _context.sent.json();\n\n              case 4:\n                response = _context.sent;\n                console.log(\"RESPONSE\", response);\n                stateArray = [];\n                response.forEach(function (student) {\n                  stateArray.push({\n                    name: student.name,\n                    selected: false,\n                    id: student.id\n                  });\n                });\n                _context.next = 10;\n                return this.setState({\n                  allStudents: stateArray\n                });\n\n              case 10:\n                this.props.updateStudents(stateArray);\n                console.log(response);\n                console.log(this.state);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getAllStudents() {\n        return _getAllStudents.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.allStudents.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"multiselect-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.state.allStudents.map(function (student) {\n          return React.createElement(MultiSelectItem, {\n            name: student.name,\n            value: student.id,\n            selected: student.selected,\n            selectStudent: _this2.selectStudent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          });\n        })), React.createElement(\"button\", {\n          onClick: this.selectAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"\".concat(this.state.allSelected ? \"Unselect All\" : \"Select All\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return MultiSelectContainer;\n}(Component);\n\nexport { MultiSelectContainer as default };","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/MultiSelect/MultiSelectContainer.jsx"],"names":["React","Component","MultiSelectItem","MultiSelectContainer","state","allStudents","allSelected","selectStudent","e","item","currentTarget","console","log","target","getAttribute","studentArray","slice","classList","contains","result","find","student","id","selected","toggle","selectAll","forEach","setState","getAllStudents","fetch","props","orgId","json","response","stateArray","push","name","updateStudents","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MultiSelectItem from \"./MultiSelectItem\";\nimport \"./MultiSelectContainer.css\";\n\nexport default class MultiSelectContainer extends Component {\n  state = {\n    allStudents: [],\n    allSelected: false\n  };\n  componentWillMount() {\n    this.getAllStudents();\n  }\n\n  async getAllStudents() {\n    let response = await (await fetch(\n      `/api/student/${this.props.orgId}`\n    )).json();\n    console.log(\"RESPONSE\", response);\n    let stateArray = [];\n    response.forEach(student => {\n      stateArray.push({ name: student.name, selected: false, id: student.id });\n    });\n    await this.setState({ allStudents: stateArray });\n    this.props.updateStudents(stateArray);\n    console.log(response);\n    console.log(this.state);\n  }\n\n  selectStudent = e => {\n    let item = e.currentTarget;\n    console.log(item);\n    console.log(e.target.getAttribute('value'))\n    let studentArray = this.state.allStudents.slice();\n    console.log('STUDENT ARRAY', studentArray);\n    if (item.classList.contains(\"selected\")) {\n      let result = studentArray.find(student => student.id == item.getAttribute(\"value\"))\n      result.selected = false;\n    } else {\n      let result = studentArray.find(student => student.id == item.getAttribute(\"value\"))\n      result.selected = true;\n    }\n\n    // this.setState({ allStudents: studentArray });\n    item.classList.toggle(\"selected\");\n  };\n\n  selectAll = () => {\n    let studentArray = this.state.allStudents.slice();\n    if (!this.state.allSelected) {\n      studentArray.forEach(student => (student.selected = true));\n      this.setState({ allSelected: true });\n    } else {\n      studentArray.forEach(student => (student.selected = false));\n      this.setState({ allSelected: false });\n    }\n    this.setState({ allStudents: studentArray });\n  };\n\n  render() {\n    if (this.state.allStudents.length > 0) {\n      return (\n        <div>\n          <div className=\"multiselect-container\">\n            {this.state.allStudents.map(student => {\n              return (\n                <MultiSelectItem\n                  name={student.name}\n                  value={student.id}\n                  selected={student.selected}\n                  selectStudent={this.selectStudent}\n                />\n              );\n            })}\n          </div>\n          <button onClick={this.selectAll}>{`${this.state.allSelected ? \"Unselect All\" : \"Select All\"}`}</button>\n        </div>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}