{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/WelcomePage/components/SignUp/SignUp.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\nimport TextField from '@material-ui/core/TextField';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orgName: '',\n      orgPhoneNum: '',\n      streetAddress: '',\n      city: '',\n      zipCode: '',\n      openTime: '',\n      closeTime: '',\n      firstName: '',\n      lastName: '',\n      adminEmail: '',\n      password: '',\n      open: false\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.capitalize = function (name) {\n      var names = name.split(\" \");\n\n      for (var i = 0; i < names.length; i++) {\n        names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n      }\n\n      return names.join(\" \");\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      console.log(_this.state); //const { name, email, password, orgName } = this.state;\n\n      fetch('/auth/organization', {\n        method: 'POST',\n        headers: {\n          \"Content-type\": 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          orgName: _this.capitalize(_this.state.orgName),\n          orgPhoneNum: _this.state.orgPhoneNum,\n          closeTime: _this.state.closeTime,\n          openTime: _this.state.openTime,\n          orgAddress: _this.state.streetAddress + \", \" + _this.state.city + \", \" + _this.state.zipCode\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log('orgid', res.id);\n        fetch('/auth/signup/staff', {\n          method: 'POST',\n          headers: {\n            \"Content-type\": 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            name: _this.capitalize(_this.state.firstName + \" \" + _this.state.lastName),\n            email: _this.state.adminEmail,\n            password: _this.state.password,\n            orgId: res.id\n          })\n        });\n      }).then(function (res) {\n        console.log('signup success'); // window.location.href=\"/StaffHomePage\";\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleSubmitClose = function (e) {\n      _this.handleSubmit(e);\n\n      _this.handleClose();\n    };\n\n    _this.setOpenTime = function (time) {\n      _this.setState({\n        openTime: time\n      });\n    };\n\n    _this.setCloseTime = function (time) {\n      _this.setState({\n        closeTime: time\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClickOpen,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Create a snacktime account for your organization!\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Organization Information\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"All fields are required to create your Organization.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.orgName,\n        id: \"orgSignup-Name\",\n        name: \"orgName\",\n        type: \"text\",\n        label: \"Organization Name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.orgPhoneNum,\n        id: \"orgSignup-phoneNum\",\n        name: \"orgPhoneNum\",\n        type: \"number\",\n        label: \"Organization Phone\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.streetAddress,\n        id: \"orgSignup-streetAddress\",\n        name: \"streetAddress\",\n        type: \"text\",\n        label: \"Street Address\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.city,\n        id: \"orgSignup-City\",\n        name: \"city\",\n        type: \"text\",\n        label: \"City\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.zipCode,\n        id: \"orgSignup-zipCode\",\n        type: \"number\",\n        name: \"zipCode\",\n        onInput: function onInput(e) {\n          e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 5);\n        },\n        label: \"Zip\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(DateTimeSelector //onChange={this.handleChange}\n      , {\n        setTime: this.setOpenTime,\n        value: this.state.openTime,\n        id: \"orgSignup-openTime\",\n        name: \"openTime\",\n        type: \"time\",\n        label: \"Open Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(DateTimeSelector //onChange={this.handleChange}\n      , {\n        value: this.state.closeTime,\n        setTime: this.setCloseTime,\n        id: \"orgSignup-closeTime\",\n        name: \"closeTime\",\n        type: \"time\",\n        label: \"Close Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Administrator Information\"), React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"All fields are required to create your Admin account.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.firstName,\n        id: \"adminSignup-firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        label: \"Your First Name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.lastName,\n        id: \"adminSignup-lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        label: \"Your Last Name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.adminEmail,\n        id: \"adminSignup-email\",\n        name: \"adminEmail\",\n        type: \"text\",\n        label: \"Your Email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: this.handleChange,\n        value: this.state.password,\n        id: \"adminSignup-password\",\n        name: \"password\",\n        type: \"password\",\n        label: \"Enter Password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onClick: this.handleSubmitClose,\n        id: \"signup-submit\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport { SignUp as default };","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/WelcomePage/components/SignUp/SignUp.jsx"],"names":["React","Button","Dialog","DialogContent","DialogContentText","DialogTitle","DateTimeSelector","TextField","SignUp","state","orgName","orgPhoneNum","streetAddress","city","zipCode","openTime","closeTime","firstName","lastName","adminEmail","password","open","handleClickOpen","setState","handleClose","handleChange","e","target","name","value","capitalize","names","split","i","length","charAt","toUpperCase","slice","join","handleSubmit","preventDefault","console","log","fetch","method","headers","credentials","body","JSON","stringify","orgAddress","then","res","json","id","email","orgId","catch","err","handleSubmitClose","setOpenTime","time","setCloseTime","Math","max","parseInt","toString","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class SignUp extends React.Component {\n  state = {\n    orgName: '',\n    orgPhoneNum: '',\n    streetAddress: '',\n    city: '',\n    zipCode: '',\n    openTime: '',\n    closeTime: '',\n    firstName: '',\n    lastName: '',\n    adminEmail: '',\n    password: '',\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  capitalize = name =>{\n    const names = name.split(\" \");\n    for(var i =0;i<names.length;i++){\n      names[i]=names[i].charAt(0).toUpperCase()+ names[i].slice(1)\n    }\n    return names.join(\" \")\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    //const { name, email, password, orgName } = this.state;\n    fetch('/auth/organization', {\n      method: 'POST',\n      headers: {\n        \"Content-type\": 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({orgName: this.capitalize(this.state.orgName), orgPhoneNum: this.state.orgPhoneNum, closeTime: this.state.closeTime, openTime: this.state.openTime, orgAddress: this.state.streetAddress+ \", \"+this.state.city+\", \"+ this.state.zipCode}),\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log('orgid',res.id);\n        fetch('/auth/signup/staff', {\n          method: 'POST',\n          headers: {\n            \"Content-type\": 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({\n            name: this.capitalize(this.state.firstName + \" \" + this.state.lastName),\n            email: this.state.adminEmail,\n            password: this.state.password,\n            orgId: res.id,\n          }),\n        });\n      })\n      .then(res => {\n        console.log('signup success')\n        // window.location.href=\"/StaffHomePage\";\n      })\n      .catch(err=>console.log(err))\n  };\n\n  handleSubmitClose = e => {\n    this.handleSubmit(e);\n    this.handleClose();\n  }\n  setOpenTime = time => {\n    this.setState({ openTime: time })\n  }\n\n  setCloseTime = time => {\n    this.setState({ closeTime: time })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button \n          onClick={this.handleClickOpen}\n          variant=\"outlined\"\n        >\n          Create a snacktime account for your organization!\n        </Button>\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Organization Information</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  All fields are required to create your Organization.\n                </DialogContentText>            \n              \n              <form>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.orgName}\n                  id=\"orgSignup-Name\"\n                  name=\"orgName\"\n                  type=\"text\"\n                  label=\"Organization Name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.orgPhoneNum}\n                  id=\"orgSignup-phoneNum\"\n                  name=\"orgPhoneNum\"\n                  type=\"number\"\n                  label=\"Organization Phone\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                {/* <label htmlFor=\"orgSignup-email\">Email: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.orgEmail}\n                  id=\"orgSignup-email\"\n                  name=\"email\"\n                  type=\"text\"\n                /> */}\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.streetAddress}\n                  id=\"orgSignup-streetAddress\"\n                  name=\"streetAddress\"\n                  type=\"text\"\n                  label=\"Street Address\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                  id=\"orgSignup-City\"\n                  name=\"city\"\n                  type=\"text\"\n                  label=\"City\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.zipCode}\n                  id=\"orgSignup-zipCode\"\n                  type=\"number\"\n                  name=\"zipCode\"\n                  onInput={(e)=>{\n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,5)\n                  }}\n                  label=\"Zip\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                \n                <DateTimeSelector\n                  //onChange={this.handleChange}\n                  setTime={this.setOpenTime}\n                  value={this.state.openTime}\n                  id=\"orgSignup-openTime\"\n                  name=\"openTime\"\n                  type=\"time\"\n                  label=\"Open Time\"\n                />\n         \n                \n                <DateTimeSelector\n                  //onChange={this.handleChange}\n                  value={this.state.closeTime}\n                  setTime={this.setCloseTime}\n                  id=\"orgSignup-closeTime\"\n                  name=\"closeTime\"\n                  type=\"time\"\n                  label=\"Close Time\"\n                />\n              </form>\n              <hr/>\n              <DialogTitle id=\"form-dialog-title\">Administrator Information</DialogTitle>\n              <DialogContentText>\n                All fields are required to create your Admin account.\n              </DialogContentText>  \n              <form>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.firstName}\n                  id=\"adminSignup-firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  label=\"Your First Name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n               \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.lastName}\n                  id=\"adminSignup-lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  label=\"Your Last Name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.adminEmail}\n                  id=\"adminSignup-email\"\n                  name=\"adminEmail\"\n                  type=\"text\"\n                  label=\"Your Email\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n               \n                <TextField\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                  id=\"adminSignup-password\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Enter Password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                />\n                <br/>\n                <input onClick={this.handleSubmitClose} id=\"signup-submit\" type=\"submit\" />\n              </form>\n            </DialogContent>\n          </Dialog>  \n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}