{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/AddMeal/AddMeal.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import classNames from 'classnames';\n\nimport { withStyles } from '@material-ui/core/styles'; // import MenuItem from '@material-ui/core/MenuItem';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport HeaderBar from '../../../../components/HeaderBar/HeaderBar'; // import Label from '@material-ui/core/Label';\n// import DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\n\nimport Auth from '../../../../utils/Auth';\nimport MultiSelectContainer from '../MultiSelect/MultiSelectContainer';\nimport Timepicker from '../../../../components/TimePicker/TimePicker';\nimport './AddMeal.css';\nimport { Redirect } from 'react-router-dom';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    submitbutton: {\n      marginTop: 25,\n      height: 10\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar types = [{\n  value: 'Breakfast',\n  label: 'Breakfast'\n}, {\n  value: 'AM Snack',\n  label: 'AM Snack'\n}, {\n  value: 'Lunch',\n  label: 'Lunch'\n}, {\n  value: 'PM Snack',\n  label: 'PM Snack'\n}, {\n  value: 'Dinner',\n  label: 'Dinner'\n}, {\n  value: 'Late Snack',\n  label: 'Late Snack'\n}];\n\nvar AddMeal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddMeal, _React$Component);\n\n  function AddMeal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddMeal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddMeal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allStudents: [],\n      studentIdsToSubmit: [],\n      studentId: '',\n      time: '',\n      food: '',\n      type: 'Breakfast',\n      multiline: 'Controlled',\n      snackbarMessage: 'No student selected'\n    };\n    _this.timepickerState = React.createRef();\n\n    _this.updateStudents = function (newArray) {\n      _this.setState({\n        allStudents: newArray\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var mealTime = _this.timepickerState.current.returnTime();\n\n      _this.setState({\n        time: mealTime\n      });\n\n      var idArray = [];\n\n      _this.state.allStudents.map(function (student) {\n        if (student.selected === true) {\n          console.log('pushing', student.id);\n          idArray.push(student.id);\n        }\n      });\n\n      console.log(idArray);\n\n      _this.setState({\n        studentIdsToSubmit: idArray\n      }, function () {\n        var _this2 = this;\n\n        if (this.state.studentIdsToSubmit.length === 0) this.handleClickSnackbar();else this.state.studentIdsToSubmit.map(function (id) {\n          console.log('Student to submit', id);\n\n          _this2.postMeal(id);\n        });\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleClick = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleClickSnackbar = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCloseSnackbar = function (event, reason) {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n\n      _this.setState({\n        studentIdsToSubmit: []\n      });\n    };\n\n    _this.postMeal = function (id) {\n      console.log('INSIDE POST MEAL, LOOKING FOR ID VALUE', id);\n      var today = new Date(); //prettier-ignore\n\n      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      console.log(date);\n      fetch(\"/api/student/\".concat(id, \"/meal\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: date,\n          time: _this.state.time,\n          food: _this.state.food,\n          type: _this.state.type\n        })\n      }).then(function (resp) {\n        console.log(resp);\n        return resp.json();\n      }).then(function (resp) {\n        console.log(\"Resp2:\", resp);\n\n        if (resp.errors) {\n          if (resp.errors.length > 0) {\n            if (resp.errors[0].message === \"Validation notEmpty on food failed\") _this.setState({\n              snackbarMessage: \"Please write meal items\"\n            }, _this.handleClickSnackbar());\n          }\n        } else if (resp) {\n          _this.setState({\n            snackbarMessage: \"Meal added.\"\n          }, _this.handleClickSnackbar());\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddMeal, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Auth.StaffAuthorize(this);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n\n      if (this.state.loggedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(HeaderBar, {\n          type: this.state.userType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }), React.createElement(MultiSelectContainer, {\n          orgId: this.state.orgId,\n          allStudents: this.state.allStudents,\n          updateStudents: this.updateStudents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"addmeal-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"addmeal-item1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Timepicker, {\n          ref: this.timepickerState,\n          setTime: this.setMealTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"addmeal-item2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"standard-select-type-native\",\n          select: true,\n          label: \"Type: \",\n          name: \"type\",\n          className: classes.textField,\n          value: this.state.type,\n          onChange: this.handleChange('type'),\n          SelectProps: {\n            native: true,\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, types.map(function (option) {\n          return React.createElement(\"option\", {\n            key: option.value,\n            value: option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, option.label);\n        }))), React.createElement(\"div\", {\n          className: \"addmeal-item3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          required: true,\n          label: \"Meal Items\",\n          className: classes.textField,\n          value: this.state.food,\n          onChange: this.handleChange('food'),\n          multiline: true,\n          rows: \"5\",\n          margin: \"normal\",\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        })), React.createElement(Button, {\n          className: classes.submitbutton,\n          onClick: this.handleSubmit,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Add Activity\")), React.createElement(Snackbar, {\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          open: this.state.open,\n          autoHideDuration: 6000,\n          onClose: this.handleCloseSnackbar,\n          ContentProps: {\n            \"aria-describedby\": \"message-id\"\n          },\n          message: React.createElement(\"span\", {\n            id: \"message-id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }, this.state.snackbarMessage),\n          action: [React.createElement(IconButton, {\n            key: \"close\",\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            className: classes.close,\n            onClick: this.handleCloseSnackbar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }));\n      } else if (this.state.loginRejected) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/notAuthorized\",\n            state: {\n              type: \"Staff\",\n              location: '/dailyreport/addmeal'\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return AddMeal;\n}(React.Component);\n\nAddMeal.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AddMeal);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/_StaffPages/UpdateDailyReport/AddMeal/AddMeal.jsx"],"names":["React","PropTypes","withStyles","TextField","Button","HeaderBar","Auth","MultiSelectContainer","Timepicker","Redirect","Snackbar","IconButton","CloseIcon","styles","theme","container","display","flexWrap","submitbutton","marginTop","height","textField","marginLeft","spacing","unit","marginRight","width","dense","menu","types","value","label","AddMeal","state","allStudents","studentIdsToSubmit","studentId","time","food","type","multiline","snackbarMessage","timepickerState","createRef","updateStudents","newArray","setState","handleSubmit","event","preventDefault","mealTime","current","returnTime","idArray","map","student","selected","console","log","id","push","length","handleClickSnackbar","postMeal","handleChange","name","target","handleClick","open","handleCloseSnackbar","reason","today","Date","date","getFullYear","getMonth","getDate","fetch","method","headers","body","JSON","stringify","then","resp","json","errors","message","StaffAuthorize","classes","props","loggedIn","userType","orgId","setMealTime","native","MenuProps","className","option","vertical","horizontal","close","loginRejected","pathname","location","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport HeaderBar from '../../../../components/HeaderBar/HeaderBar';\n// import Label from '@material-ui/core/Label';\n// import DateTimeSelector from '../../../../components/DateTimeSelector/DateTimeSelector';\nimport Auth from '../../../../utils/Auth';\nimport MultiSelectContainer from '../MultiSelect/MultiSelectContainer';\nimport Timepicker from '../../../../components/TimePicker/TimePicker';\nimport './AddMeal.css';\n\nimport { Redirect } from 'react-router-dom'\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  submitbutton: {\n    marginTop: 25,\n    height: 10,\n  },\n\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst types = [\n  {\n    value: 'Breakfast',\n    label: 'Breakfast',\n  },\n  {\n    value: 'AM Snack',\n    label: 'AM Snack',\n  },\n  {\n    value: 'Lunch',\n    label: 'Lunch',\n  },\n  {\n    value: 'PM Snack',\n    label: 'PM Snack',\n  },\n  {\n    value: 'Dinner',\n    label: 'Dinner',\n  },\n  {\n    value: 'Late Snack',\n    label: 'Late Snack',\n  },\n];\n\nclass AddMeal extends React.Component {\n  state = {\n    allStudents: [],\n    studentIdsToSubmit: [],\n    studentId: '',\n    time: '',\n    food: '',\n    type: 'Breakfast',\n    multiline: 'Controlled',\n    snackbarMessage: 'No student selected'\n  };\n  timepickerState = React.createRef();\n\n  async componentWillMount() {\n    await Auth.StaffAuthorize(this);\n  }\n\n  updateStudents = newArray => {\n    this.setState({ allStudents: newArray });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const mealTime = this.timepickerState.current.returnTime();\n    this.setState({ time: mealTime });\n    let idArray = [];\n    this.state.allStudents.map(student => {\n      if (student.selected === true) {\n        console.log('pushing', student.id);\n        idArray.push(student.id);\n      }\n    });\n    console.log(idArray);\n    this.setState({ studentIdsToSubmit: idArray }, function () {\n      if (this.state.studentIdsToSubmit.length === 0)\n        this.handleClickSnackbar();\n      else\n        this.state.studentIdsToSubmit.map(id => {\n          console.log('Student to submit', id);\n          this.postMeal(id);\n        });\n    });\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleClick = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleClickSnackbar = () => {\n    this.setState({ open: true });\n  };\n  handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n    this.setState({\n      studentIdsToSubmit: []\n    })\n  };\n\n  postMeal = id => {\n    console.log('INSIDE POST MEAL, LOOKING FOR ID VALUE', id);\n    let today = new Date();\n    //prettier-ignore\n    let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    console.log(date);\n    fetch(`/api/student/${id}/meal`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        date: date,\n        time: this.state.time,\n        food: this.state.food,\n        type: this.state.type,\n      }),\n    })\n      .then(resp => {\n        console.log(resp);\n        return resp.json();\n      })\n      .then(resp => {\n        console.log(\"Resp2:\", resp)\n        if (resp.errors) {\n          if (resp.errors.length > 0) {\n            if (resp.errors[0].message === \"Validation notEmpty on food failed\")\n              this.setState({ snackbarMessage: \"Please write meal items\" }, this.handleClickSnackbar())\n          }\n        } else if (resp) {\n          this.setState({ snackbarMessage: \"Meal added.\" },\n            this.handleClickSnackbar()\n          )\n        }\n      })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.loggedIn) {\n      return (\n        <div>\n          <HeaderBar type={this.state.userType} />\n          <MultiSelectContainer\n            orgId={this.state.orgId}\n            allStudents={this.state.allStudents}\n            updateStudents={this.updateStudents}\n          />\n          <div className=\"addmeal-container\">\n            <div className=\"addmeal-item1\">\n              <Timepicker ref={this.timepickerState} setTime={this.setMealTime} />\n            </div>\n            <div className=\"addmeal-item2\">\n              <TextField\n                id=\"standard-select-type-native\"\n                select\n                label=\"Type: \"\n                name=\"type\"\n                className={classes.textField}\n                value={this.state.type}\n                onChange={this.handleChange('type')}\n                SelectProps={{\n                  native: true,\n                  MenuProps: {\n                    className: classes.menu,\n                  },\n                }}\n                margin=\"normal\"\n              >\n                {types.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </div>\n            <div className=\"addmeal-item3\">\n              <TextField\n                required\n                label=\"Meal Items\"\n                className={classes.textField}\n                value={this.state.food}\n                onChange={this.handleChange('food')}\n                multiline\n                rows=\"5\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </div>\n            <Button\n              className={classes.submitbutton}\n              onClick={this.handleSubmit}\n              color=\"primary\"\n            >\n              Add Activity\n            </Button>\n          </div>\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            }}\n            open={this.state.open}\n            autoHideDuration={6000}\n            onClose={this.handleCloseSnackbar}\n            ContentProps={{\n              \"aria-describedby\": \"message-id\"\n            }}\n            message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={this.handleCloseSnackbar}\n              >\n                <CloseIcon />\n              </IconButton>\n            ]}\n          />\n        </div>\n      );\n    } else if (this.state.loginRejected) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/notAuthorized\",\n            state: {\n              type: \"Staff\",\n              location: '/dailyreport/addmeal'\n            }\n          }}\n        />\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nAddMeal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AddMeal);\n"]},"metadata":{},"sourceType":"module"}