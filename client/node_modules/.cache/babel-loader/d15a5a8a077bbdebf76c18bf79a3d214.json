{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/ForgotPassword/components/ResetPassword.jsx\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport Send from '@material-ui/icons/Send';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nvar styles = function styles(theme) {\n  return {\n    div: {\n      left: 0,\n      right: 0\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    card: {\n      maxWidth: '50%',\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)'\n    },\n    title: {\n      marginBottom: 16,\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    },\n    button: {\n      marginTop: '5%'\n    }\n  };\n};\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      role: '',\n      resetKey: '',\n      newPassword: '',\n      showPassword: false,\n      status: 'Please enter your new password.'\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.checkPassword = function (str) {\n      // at least one number, one lowercase and one uppercase letter\n      // at least six characters that are letters, numbers or the underscore\n      var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])\\w{6,}$/;\n      return re.test(str);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault(); // console.log(\"event\", this.state.email);\n\n      var validPassword = _this.checkPassword(_this.state.newPassword);\n\n      if (validPassword) {\n        fetch('/auth/resetpass', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            resetKey: _this.state.resetKey,\n            newPassword: _this.state.newPassword,\n            role: _this.state.role\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (response) {\n          return _this.setState({\n            status: response\n          });\n        });\n      } else {\n        _this.setState({\n          status: 'Please enter a password that is at least 6 characters long with at least one number, one lowercase letter, and one uppercase letter.'\n        });\n      }\n    };\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pathname = this.props.location.pathname;\n      console.log('this.props.location', pathname);\n      var link = pathname.slice(15);\n      var role = link.split('/')[0];\n      var resetKey = link.split('/')[1];\n      console.log('role', role);\n      console.log('reset key', resetKey);\n      this.setState({\n        resetKey: resetKey,\n        role: role\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.status), React.createElement(TextField, {\n        id: \"outlined-adornment-password\",\n        className: classNames(classes.margin, classes.textField),\n        variant: \"outlined\",\n        type: this.state.showPassword ? 'text' : 'password',\n        label: \"New Password\",\n        value: this.state.newPassword,\n        onChange: this.handleChange('newPassword'),\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"contained\",\n        size: \"small\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Send\", React.createElement(Send, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ResetPassword;\n}(Component);\n\nResetPassword.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ResetPassword);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/ForgotPassword/components/ResetPassword.jsx"],"names":["React","Component","TextField","withStyles","InputAdornment","PropTypes","classNames","IconButton","Visibility","VisibilityOff","Button","Send","Card","CardContent","styles","theme","div","left","right","formControl","margin","spacing","unit","minWidth","card","maxWidth","position","top","transform","bullet","display","title","marginBottom","fontSize","pos","button","marginTop","ResetPassword","state","role","resetKey","newPassword","showPassword","status","handleChange","name","event","setState","target","value","checkPassword","str","re","test","handleSubmit","preventDefault","validPassword","fetch","method","headers","body","JSON","stringify","then","res","json","response","handleClickShowPassword","pathname","props","location","console","log","link","slice","split","classes","textField","endAdornment","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport Send from '@material-ui/icons/Send';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst styles = theme => ({\n  div: {\n    left: 0,\n    right: 0,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  card: {\n    maxWidth: '50%',\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  button: {\n    marginTop: '5%',\n  },\n});\n\nclass ResetPassword extends Component {\n  componentDidMount() {\n    let pathname = this.props.location.pathname;\n    console.log('this.props.location', pathname);\n    let link = pathname.slice(15);\n    let role = link.split('/')[0];\n    let resetKey = link.split('/')[1];\n    console.log('role', role);\n    console.log('reset key', resetKey);\n    this.setState({ resetKey: resetKey, role: role });\n  }\n\n  state = {\n    role: '',\n    resetKey: '',\n    newPassword: '',\n    showPassword: false,\n    status: 'Please enter your new password.',\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  checkPassword = str => {\n    // at least one number, one lowercase and one uppercase letter\n    // at least six characters that are letters, numbers or the underscore\n    var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])\\w{6,}$/;\n    return re.test(str);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // console.log(\"event\", this.state.email);\n    let validPassword = this.checkPassword(this.state.newPassword);\n    if (validPassword) {\n      fetch('/auth/resetpass', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          resetKey: this.state.resetKey,\n          newPassword: this.state.newPassword,\n          role: this.state.role\n        }),\n      })\n        .then(res => {\n          return res.json();\n        })\n        .then(response => this.setState({ status: response }));\n    } else {\n      this.setState({\n        status:\n          'Please enter a password that is at least 6 characters long with at least one number, one lowercase letter, and one uppercase letter.',\n      });\n    }\n  };\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Card className={classes.card}>\n          <CardContent>\n            <h3>{this.state.status}</h3>\n            <TextField\n              id=\"outlined-adornment-password\"\n              className={classNames(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              type={this.state.showPassword ? 'text' : 'password'}\n              label=\"New Password\"\n              value={this.state.newPassword}\n              onChange={this.handleChange('newPassword')}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"Toggle password visibility\"\n                      onClick={this.handleClickShowPassword}\n                    >\n                      {this.state.showPassword ? (\n                        <VisibilityOff />\n                      ) : (\n                        <Visibility />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <Button\n              onClick={this.handleSubmit}\n              variant=\"contained\"\n              size=\"small\"\n              className={classes.button}\n            >\n              Send\n              <Send />\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nResetPassword.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}