{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/SingleStudent/components/ParentContainer.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./ParentContainer.css\"; // import Table from \"@material-ui/core/Table\";\n\nimport Button from \"@material-ui/core/Button\"; // import TableBody from \"@material-ui/core/TableBody\";\n\nimport TableCell from \"@material-ui/core/TableCell\"; // import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport ResponsiveTable from \"./ResponsiveTable\"; // const CustomTableCell = withStyles(theme => ({\n//   head: {\n//     backgroundColor: indigo[500],\n//     color: theme.palette.common.white\n//   },\n//   body: {\n//     fontSize: 14\n//   }\n// }))(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"75vw\",\n      marginTop: theme.spacing.unit * 3 // overflowX: 'auto',\n\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    childInfo: {\n      margin: \"15px\"\n    },\n    table: {\n      minWidth: 700\n    },\n    searchSubmit: {\n      marginTop: \"25px\"\n    },\n    submitGuardian: {\n      marginTop: \"25px\"\n    },\n    registerParent: {\n      marginTop: \"25px\"\n    },\n    row: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.background.default\n      }\n    },\n    block: {\n      display: \"block\"\n    }\n  };\n};\n\nvar ParentContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ParentContainer, _Component);\n\n  function ParentContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ParentContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ParentContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchEmail: \"\",\n      parents: [],\n      email: \"\",\n      status: \"\",\n      showAddNewParent: true,\n      parentName: \"\",\n      parentEmail: \"\",\n      parentAddress: \"\",\n      parentPhone: \"\",\n      guardians: [],\n      showAddNewGuardian: true,\n      guardianName: \"\",\n      guardianEmail: \"\",\n      guardianAddress: \"\",\n      guardianPhone: \"\",\n      role: _this.props.role,\n      staffs: [],\n      orgName: \"\",\n      orgAddress: \"\",\n      orgPhone: \"\",\n      orgOpenTime: \"\",\n      orgCloseTime: \"\",\n      hideSearchParent: false,\n      diaperings: [],\n      meals: [],\n      naps: [],\n      medicines: [],\n      incidents: [],\n      date: \"\",\n      noteForStaff: null,\n      noteForParents: null,\n      highlight: null,\n      validationErrorMssg: \"\",\n      guardianValidationErrorMssg: \"\"\n    };\n\n    _this.getDiapering = function () {\n      console.log(\"start of get diapering function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      console.log(\"Date:\", date);\n      console.log(\"Id\", _this.props.studentId);\n\n      _this.setState({\n        date: date\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/diapering/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No diaperings\") {\n            _this.setState({\n              status: \"No diapering found :(\"\n            });\n          } else {\n            var allDiaperings = [];\n            resp.forEach(function (diapering) {\n              var diaperingRow = [];\n              diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n              allDiaperings.push(diaperingRow);\n            });\n\n            _this.setState({\n              diaperingData: allDiaperings,\n              diaperings: resp\n            });\n          }\n        }\n      });\n    };\n\n    _this.getMeals = function () {\n      console.log(\"start of get meals function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      console.log(\"Date:\", date);\n      console.log(\"Id\", _this.props.studentId);\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/meal/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No meals\") {\n            _this.setState({\n              status: \"No Meal found :(\"\n            });\n          } else {\n            var allMeals = [];\n            resp.forEach(function (meal) {\n              var mealRow = [];\n              mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n              allMeals.push(mealRow);\n            });\n\n            _this.setState({\n              mealData: allMeals,\n              meals: resp\n            });\n          }\n        }\n      });\n    };\n\n    _this.getNaps = function () {\n      console.log(\"start of get naps function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      console.log(\"Date:\", date);\n      console.log(\"Id\", _this.props.studentId);\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/nap/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No naps\") {\n            _this.setState({\n              status: \"No Naps found :(\"\n            });\n          } else {\n            var allnaps = [];\n            resp.forEach(function (nap) {\n              var napRow = [];\n              napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm: A\"));\n              allnaps.push(napRow);\n            });\n\n            _this.setState({\n              napData: allnaps,\n              naps: resp\n            });\n          }\n        }\n      });\n    };\n\n    _this.getMedicines = function () {\n      console.log(\"start of get medicines function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      console.log(\"Date:\", date);\n      console.log(\"Id\", _this.props.studentId);\n\n      _this.setState({\n        date: date\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/medicine/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No medicines\") {\n            _this.setState({\n              status: \"No medicines found :(\"\n            });\n          } else {\n            var allmedicines = [];\n            resp.forEach(function (medicine) {\n              var medicineRow = [];\n              medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n              allmedicines.push(medicineRow);\n            });\n\n            _this.setState({\n              medicineData: allmedicines,\n              medicines: resp\n            });\n          }\n        }\n      });\n    };\n\n    _this.getIncidents = function () {\n      console.log(\"start of get incidents function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      console.log(\"Date:\", date);\n      console.log(\"Id\", _this.props.studentId);\n\n      _this.setState({\n        date: date\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/incident/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No incidents\") {\n            _this.setState({\n              status: \"No incident found :(\"\n            });\n          } else {\n            var allincidents = [];\n            resp.forEach(function (incident) {\n              var incidentRow = [];\n              incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n              allincidents.push(incidentRow);\n            });\n\n            _this.setState({\n              incidentData: allincidents,\n              incidents: resp\n            });\n          }\n        }\n      });\n    };\n\n    _this.getNotesForStaff = function () {\n      console.log(\"start of get note for staff function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n      _this.setState({\n        date: date\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/report/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        console.log(\"Resp from notes: \", resp);\n\n        if (resp) {\n          if (resp !== \"No Notes\") {\n            console.log(resp);\n\n            _this.setState({\n              noteForStaff: [[resp.noteForStaff]]\n            });\n          }\n        }\n      });\n    };\n\n    _this.getNotesForParents = function () {\n      console.log(\"start of get note for parents function\");\n      var today = new Date();\n      var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n      _this.setState({\n        date: date\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/report/\").concat(date)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        console.log(\"Resp from notes: \", resp);\n\n        if (resp) {\n          if (resp === \"No Notes\") {\n            _this.setState({\n              status: \"No report found :(\"\n            });\n          } else {\n            console.log(resp);\n\n            _this.setState({\n              noteForParents: [[resp.noteForParents]],\n              highlight: [[resp.highlight]]\n            });\n          }\n        }\n      });\n    };\n\n    _this.getSchoolInfo = function () {\n      //use this.props.orgId as parameter to fetch and assign it to appropriate states\n      fetch(\"/api/parent/org/\".concat(_this.props.orgId)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        return _this.setState({\n          orgName: resp.name,\n          orgAddress: resp.address,\n          orgPhone: resp.phone,\n          orgOpenTime: moment(resp.openTime, \"HH:mm:ss\").format(\"hh:mm A\"),\n          orgCloseTime: moment(resp.closeTime, \"HH:mm:ss\").format(\"hh:mm A\")\n        });\n      });\n    };\n\n    _this.getStaffInfo = function () {\n      //use this.props.orgId as parameter to fetch and assign to state staffs\n      fetch(\"/api/parent/orgstaff/\".concat(_this.props.orgId)).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No staffs found\") {\n            _this.setState({\n              status: \"No staffs found :(\"\n            });\n          } else {\n            var allStaffs = [];\n            resp.forEach(function (staff) {\n              var staffRow = [];\n              staffRow.push(staff.name, staff.email);\n              allStaffs.push(staffRow);\n            });\n\n            _this.setState({\n              staffs: allStaffs\n            });\n          }\n        }\n      });\n    };\n\n    _this.getExistingPickup = function () {\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/pickup\")).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          if (resp === \"No pickup found\") {\n            _this.setState({\n              status: \"No pickup found :(\"\n            });\n          } else {\n            var allGuardians = [];\n            resp.Pickups.forEach(function (guardian) {\n              var guardianRow = [];\n              guardianRow.push(guardian.name, guardian.phone, guardian.email, guardian.address);\n              allGuardians.push(guardianRow);\n            });\n\n            _this.setState({\n              guardians: allGuardians\n            });\n          }\n        }\n      });\n    };\n\n    _this.getExistingParent = function () {\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/parent\")).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        if (resp) {\n          console.log(\"resp:\", resp);\n\n          if (resp === \"No parent found\") {\n            _this.setState({\n              status: \"No parents found :(\"\n            });\n          } else {\n            var allParents = [];\n            resp.Parents.forEach(function (parent) {\n              var parentRow = [];\n              parentRow.push(parent.name, parent.phone, parent.email, parent.address);\n              allParents.push(parentRow);\n            });\n\n            _this.setState({\n              parents: allParents\n            });\n          }\n        }\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSearch = function (e) {\n      e.preventDefault();\n      if (_this.state.searchEmail.trim() === \"\") _this.setState({\n        status: \"Email can't be empty\"\n      });else {\n        console.log(_this.state.searchEmail, \"PARENT EMAIL\");\n        fetch(\"/api/parent/email/\".concat(_this.state.searchEmail)).then(function (resp) {\n          return resp.json();\n        }).then(function (resp) {\n          if (resp.name) {\n            _this.setState({\n              existingParent: resp\n            });\n\n            var _this$state$existingP = _this.state.existingParent,\n                name = _this$state$existingP.name,\n                email = _this$state$existingP.email,\n                phone = _this$state$existingP.phone,\n                address = _this$state$existingP.address,\n                id = _this$state$existingP.id;\n\n            _this.setState({\n              parentId: id,\n              status: \"\".concat(name, \", \").concat(email, \", \").concat(phone, \", \").concat(address)\n            });\n          } else {\n            _this.setState({\n              status: \"That email doesn't exist in our database\"\n            });\n          }\n        });\n      }\n    };\n\n    _this.capitalize = function (name) {\n      var names = name.split(\" \");\n\n      for (var i = 0; i < names.length; i++) {\n        names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n      }\n\n      return names.join(\" \");\n    };\n\n    _this.handleSubmitNewParent = function (e) {\n      e.preventDefault();\n      var url = window.location.href;\n      url = url.substring(0, url.length - 14);\n      var newObj = {\n        email: _this.state.parentEmail,\n        address: _this.state.parentAddress,\n        phone: _this.state.parentPhone,\n        name: _this.capitalize(_this.state.parentName),\n        baseUrl: url\n      };\n      console.log(newObj);\n\n      _this.setState({\n        addParentForm: newObj\n      });\n\n      console.log(\"ADD PARENT FORM\", _this.state.addParentForm);\n      console.log(\"STudnet IDDddddddd\", _this.props.studentId);\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/parent\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newObj)\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        console.log(resp);\n\n        if (resp.id) {\n          _this.setState({\n            status: \"Parent Added!\",\n            parentName: \"\",\n            parentEmail: \"\",\n            parentAddress: \"\",\n            parentPhone: \"\",\n            validationErrorMssg: \"\"\n          } //() => this.getExistingParent()\n          );\n        } else {\n          if (resp.errors) {\n            if (resp.errors[0].message === \"email must be unique\") _this.setState({\n              validationErrorMssg: \"Email already exists in database\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation isEmail on email failed\") _this.setState({\n              validationErrorMssg: \"Invalid email address\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation notEmpty on name failed\") _this.setState({\n              validationErrorMssg: \"Name is required\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation len on phone failed\") _this.setState({\n              validationErrorMssg: \"Invalid phone number\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation notEmpty on address failed\") _this.setState({\n              validationErrorMssg: \"Address is required\",\n              status: \"\"\n            });\n          } else _this.setState({\n            validationErrorMssg: \"Parent could not be added, please check the entered values\",\n            status: \"\"\n          });\n        }\n\n        _this.getExistingParent();\n      });\n    };\n\n    _this.handleSubmitNewGuardian = function (e) {\n      e.preventDefault(); // let url = window.location.href;\n      // url = url.substring(0, url.length - 14);\n\n      var newObj = {\n        email: _this.state.guardianEmail,\n        address: _this.state.guardianAddress,\n        phone: _this.state.guardianPhone,\n        name: _this.capitalize(_this.state.guardianName) //baseUrl: url\n\n      };\n\n      _this.setState({\n        addGuardianForm: newObj\n      });\n\n      fetch(\"/api/student/\".concat(_this.props.studentId, \"/pickup\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newObj)\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (resp) {\n        console.log(resp);\n\n        if (resp.id) {\n          _this.setState({\n            status: \"Guardian Added!\",\n            guardianName: \"\",\n            guardianEmail: \"\",\n            guardianAddress: \"\",\n            guardianPhone: \"\",\n            guardianValidationErrorMssg: \"\"\n          } //() => this.getExistingPickup()\n          );\n        } else {\n          if (resp.errors) {\n            if (resp.errors[0].message === \"Validation isEmail on email failed\") _this.setState({\n              guardianValidationErrorMssg: \"Invalid email address\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation notEmpty on name failed\") _this.setState({\n              guardianValidationErrorMssg: \"Name is required\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation len on phone failed\") _this.setState({\n              guardianValidationErrorMssg: \"Invalid phone number\",\n              status: \"\"\n            });else if (resp.errors[0].message === \"Validation notEmpty on address failed\") _this.setState({\n              guardianValidationErrorMssg: \"Address is required\",\n              status: \"\"\n            });\n          } else _this.setState({\n            guardianValidationErrorMssg: \"Guardian could not be added, please check the entered values\",\n            status: \"\"\n          });\n        }\n\n        _this.getExistingPickup();\n      });\n    };\n\n    _this.handleAddNewParent = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        addParentForm: {},\n        showAddNewParent: false,\n        hideSearchParent: true,\n        status: \"\"\n      });\n    };\n\n    _this.handleAddNewGuardian = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        addGuardianForm: {},\n        showAddNewGuardian: false,\n        status: \"\"\n      });\n    };\n\n    _this.makeAssociation =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"association func\");\n                e.preventDefault();\n                _context.next = 4;\n                return fetch(\"/api/parentstudent\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    parentId: _this.state.parentId,\n                    studentId: _this.props.studentId\n                  })\n                }).then(_this.getExistingParent());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteAssociation = function (e) {\n      var data = {\n        studentId: _this.props.studentId,\n        parentId: e.target.name\n      };\n      console.log(data);\n      fetch(\"/api/\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function () {\n        return _this.getExistingParent();\n      });\n    };\n\n    _this.editParentInfo = function (e) {\n      var data = {\n        parentId: e.target.name\n      };\n      fetch(\"/api/\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function () {\n        return _this.getExistingParent();\n      });\n    };\n\n    _this.renderSearchParentByEmailForm = function () {\n      var classes = _this.props.classes;\n      if (!_this.state.hideSearchParent) return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"searchEmail\",\n        value: _this.state.searchEmail,\n        onChange: _this.handleChange,\n        id: \"addParents\",\n        label: \"Add Parents by Email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: classes.searchSubmit,\n        onClick: _this.handleSearch,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Search\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(ParentContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getExistingParent();\n      this.getExistingPickup();\n      this.getSchoolInfo();\n      this.getStaffInfo();\n      this.getDiapering();\n      this.getMeals();\n      this.getNaps();\n      this.getMedicines();\n      this.getIncidents();\n      if (this.props.role === \"staff\") this.getNotesForStaff();else if (this.props.role === \"parent\") this.getNotesForParents();\n      console.log(this.props.studentId, \"STUDENT ID\");\n    }\n  }, {\n    key: \"renderAddParentForm\",\n    value: function renderAddParentForm() {\n      var classes = this.props.classes;\n      if (this.state.role === \"staff\") return React.createElement(\"div\", {\n        className: \"add-new-parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, this.renderSearchParentByEmailForm(), this.state.addParentForm && React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"parentName\",\n        onChange: this.handleChange,\n        value: this.state.parentName,\n        id: \"ParentName\",\n        label: \"Parent's Name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"parentPhone\",\n        onChange: this.handleChange,\n        value: this.state.parentPhone,\n        id: \"ParentPhone\",\n        label: \"Parent's Phone\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"parentEmail\",\n        onChange: this.handleChange,\n        value: this.state.parentEmail,\n        id: \"ParentEmail\",\n        label: \"Parent's Email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"parentAddress\",\n        onChange: this.handleChange,\n        value: this.state.parentAddress,\n        id: \"ParentAddress\",\n        label: \"Parent's Address\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: classes.registerParent,\n        onClick: this.handleSubmitNewParent,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Register and Email New Parent\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }, this.state.status), React.createElement(\"div\", {\n        className: \"validationerror\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, this.state.validationErrorMssg), this.state.existingParent && React.createElement(Button, {\n        onClick: this.makeAssociation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, \"Add Existing Parent to Child\"), this.state.showAddNewParent && React.createElement(Button, {\n        name: \"new\",\n        onClick: this.handleAddNewParent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, \"Create New Parent Account\"));else if (this.state.role === \"parent\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderGuardianForm\",\n    value: function renderGuardianForm() {\n      var classes = this.props.classes;\n      if (this.state.role === \"parent\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, this.state.addGuardianForm && React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"guardianName\",\n        onChange: this.handleChange,\n        value: this.state.guardianName,\n        id: \"GuardianName\",\n        label: \"Guardian's Name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"guardianPhone\",\n        onChange: this.handleChange,\n        value: this.state.guardianPhone,\n        id: \"GuardianPhone\",\n        label: \"Guardian's Phone\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"guardianEmail\",\n        onChange: this.handleChange,\n        value: this.state.guardianEmail,\n        id: \"GuardianEmail\",\n        label: \"Guardian's Email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"guardianAddress\",\n        onChange: this.handleChange,\n        value: this.state.guardianAddress,\n        id: \"GuardianAddress\",\n        label: \"Guardian's Address\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }, this.state.status), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762\n        },\n        __self: this\n      }, this.state.guardianValidationErrorMssg), React.createElement(Button, {\n        className: classes.submitGuardian,\n        onClick: this.handleSubmitNewGuardian,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, \"Submit\")), this.state.showAddNewGuardian && React.createElement(Button, {\n        name: \"new\",\n        onClick: this.handleAddNewGuardian,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, \"Add a Guardian\"));else if (this.state.role === \"staff\") return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderSchoolInfo\",\n    value: function renderSchoolInfo() {\n      var classes = this.props.classes;\n      if (this.state.role === \"parent\") return React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 787\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, \"School\")), React.createElement(ExpansionPanelDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, React.createElement(ResponsiveTable, {\n        title: \"School Information\",\n        columns: [\"Name\", \"Phone\", \"Address\", \"Open Time\", \"Close Time\"],\n        data: [[this.state.orgName, this.state.orgPhone, this.state.orgAddress, this.state.orgOpenTime, this.state.orgCloseTime]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderStaffInfo\",\n    value: function renderStaffInfo() {\n      var classes = this.props.classes;\n      if (this.state.role === \"parent\") return React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 804\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, \"Staff\")), React.createElement(ExpansionPanelDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, React.createElement(ResponsiveTable, {\n        title: \"Staff\",\n        columns: [\"Name\", \"Email\"],\n        data: this.state.staffs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderIncidents\",\n    value: function renderIncidents() {\n      if (this.state.incidents.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Incidents\",\n          columns: [\"Time\", \"Incident\"],\n          data: this.state.incidentData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 823\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderMeds\",\n    value: function renderMeds() {\n      if (this.state.medicines.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 832\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 835\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Medicines Administered\",\n          data: this.state.medicineData,\n          columns: [\"Time\", \"Medicine\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderNaps\",\n    value: function renderNaps() {\n      if (this.state.naps.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Naps\",\n          data: this.state.napData,\n          columns: [\"Start Time\", \"End Time\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 849\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderMeals\",\n    value: function renderMeals() {\n      if (this.state.meals.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Meals\",\n          columns: [\"Time\", \"Meal\", \"Food\"],\n          data: this.state.mealData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderDiaperings\",\n    value: function renderDiaperings() {\n      if (this.state.diaperings.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 875\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 878\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Diaper/Toilet\",\n          columns: [\"Time\", \"Place\", \"Type\"],\n          data: this.state.diaperingData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 879\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"renderNoteForParents\",\n    value: function renderNoteForParents() {\n      if (this.props.role === \"parent\") {\n        if (!this.state.noteForParents && !this.state.highlight) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 889\n            },\n            __self: this\n          });\n        }\n\n        if (this.state.noteForParents && this.state.highlight) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 893\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 894\n            },\n            __self: this\n          }, React.createElement(ResponsiveTable, {\n            title: \"Note for Parents\",\n            columns: [\"Note\"],\n            data: this.state.noteForParents,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 895\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 897\n            },\n            __self: this\n          }, React.createElement(ResponsiveTable, {\n            title: \"Highlight of the day\",\n            columns: [\"Highlight\"],\n            data: this.state.highlight,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 898\n            },\n            __self: this\n          })));\n        }\n\n        if (this.state.highlight) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 905\n            },\n            __self: this\n          }, React.createElement(ResponsiveTable, {\n            title: \"Highlight of the day\",\n            columns: [\"Highlight\"],\n            data: this.state.highlight,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 906\n            },\n            __self: this\n          }));\n        }\n\n        if (this.state.noteForParents) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 912\n            },\n            __self: this\n          }, React.createElement(ResponsiveTable, {\n            title: \"Note for Parents\",\n            columns: [\"Note\"],\n            data: this.state.noteForParents,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 913\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"renderNoteForStaff\",\n    value: function renderNoteForStaff() {\n      if (this.props.role === \"staff\") {\n        if (!this.state.noteForStaff) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 924\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 927\n            },\n            __self: this\n          }, React.createElement(ResponsiveTable, {\n            title: \"Note for Staff\",\n            columns: [\"Note\"],\n            data: this.state.noteForStaff,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 928\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"renderGuardianTable\",\n    value: function renderGuardianTable() {\n      if (this.state.guardians.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 939\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Guardians\",\n          columns: [\"Name\", \"Phone\", \"Email\", \"Address\"],\n          data: this.state.guardians,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 940\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 944\n          },\n          __self: this\n        }, \"No Guardian added\");\n      }\n    }\n  }, {\n    key: \"renderParentTable\",\n    value: function renderParentTable() {\n      if (this.state.parents.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952\n          },\n          __self: this\n        }, React.createElement(ResponsiveTable, {\n          title: \"Parents\",\n          columns: [\"Name\", \"Phone\", \"Email\", \"Address\"],\n          data: this.state.parents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 953\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 957\n          },\n          __self: this\n        }, \"No Parents added\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 968\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969\n        },\n        __self: this\n      }, \"Today's Report\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, this.renderNoteForStaff(), this.renderNoteForParents(), this.renderDiaperings(), this.renderMeals(), this.renderNaps(), this.renderMeds(), this.renderIncidents()))), React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 986\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      }, \"Student Information\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }, React.createElement(ResponsiveTable, {\n        title: \"Student Information\",\n        columns: [\"Address\", \"DOB\", \"Allergies\", \"Medications\", \"Note\", \"Doctor\"],\n        data: [[this.props.address, this.props.dob, this.props.allergies, this.props.medication, this.props.notes, this.props.doctor]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      })))), React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, \"Parents\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, this.renderParentTable()), this.renderAddParentForm()), React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1009\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, \"Guardians\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, this.renderGuardianTable()), this.renderGuardianForm()), this.renderSchoolInfo(), this.renderStaffInfo(), React.createElement(ExpansionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1021\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022\n        },\n        __self: this\n      }, \"Report Archive\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: '/archive',\n          state: {\n            studentId: this.props.studentId,\n            role: this.props.role,\n            name: this.props.name\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        },\n        __self: this\n      }, \"Click here to see \", this.props.name, \"'s report archive \"))))));\n    }\n  }]);\n\n  return ParentContainer;\n}(Component);\n\nParentContainer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ParentContainer);","map":{"version":3,"sources":["/Users/admin/Desktop/my-code/UCB/SnackTime/client/src/pages/SingleStudent/components/ParentContainer.jsx"],"names":["React","Component","PropTypes","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","TextField","Button","TableCell","indigo","moment","Link","ResponsiveTable","styles","theme","root","width","marginTop","spacing","unit","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","childInfo","margin","table","minWidth","searchSubmit","submitGuardian","registerParent","row","backgroundColor","palette","background","default","block","display","ParentContainer","state","searchEmail","parents","email","status","showAddNewParent","parentName","parentEmail","parentAddress","parentPhone","guardians","showAddNewGuardian","guardianName","guardianEmail","guardianAddress","guardianPhone","role","props","staffs","orgName","orgAddress","orgPhone","orgOpenTime","orgCloseTime","hideSearchParent","diaperings","meals","naps","medicines","incidents","date","noteForStaff","noteForParents","highlight","validationErrorMssg","guardianValidationErrorMssg","getDiapering","console","log","today","Date","getFullYear","getMonth","getDate","studentId","setState","fetch","then","resp","json","allDiaperings","forEach","diapering","diaperingRow","push","time","format","place","type","diaperingData","getMeals","allMeals","meal","mealRow","food","mealData","getNaps","allnaps","nap","napRow","startTime","endTime","napData","getMedicines","allmedicines","medicine","medicineRow","medName","medicineData","getIncidents","allincidents","incident","incidentRow","incidentData","getNotesForStaff","getNotesForParents","getSchoolInfo","orgId","name","address","phone","openTime","closeTime","getStaffInfo","allStaffs","staff","staffRow","getExistingPickup","allGuardians","Pickups","guardian","guardianRow","getExistingParent","allParents","Parents","parent","parentRow","handleChange","e","target","value","handleSearch","preventDefault","trim","existingParent","id","parentId","capitalize","names","split","i","length","charAt","toUpperCase","slice","join","handleSubmitNewParent","url","window","location","href","substring","newObj","baseUrl","addParentForm","method","headers","body","JSON","stringify","errors","message","handleSubmitNewGuardian","addGuardianForm","handleAddNewParent","handleAddNewGuardian","makeAssociation","deleteAssociation","data","editParentInfo","renderSearchParentByEmailForm","classes","renderNoteForStaff","renderNoteForParents","renderDiaperings","renderMeals","renderNaps","renderMeds","renderIncidents","dob","allergies","medication","notes","doctor","renderParentTable","renderAddParentForm","renderGuardianTable","renderGuardianForm","renderSchoolInfo","renderStaffInfo","pathname","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./ParentContainer.css\";\n// import Table from \"@material-ui/core/Table\";\nimport Button from \"@material-ui/core/Button\";\n// import TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport ResponsiveTable from \"./ResponsiveTable\"\n\n// const CustomTableCell = withStyles(theme => ({\n//   head: {\n//     backgroundColor: indigo[500],\n//     color: theme.palette.common.white\n//   },\n//   body: {\n//     fontSize: 14\n//   }\n// }))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: \"75vw\",\n    marginTop: theme.spacing.unit * 3\n    // overflowX: 'auto',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  childInfo: {\n    margin: \"15px\"\n  },\n  table: {\n    minWidth: 700\n  },\n  searchSubmit: {\n    marginTop: \"25px\"\n  },\n  submitGuardian: {\n    marginTop: \"25px\"\n  },\n  registerParent: {\n    marginTop: \"25px\"\n  },\n  row: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  block: {\n    display: \"block\"\n  }\n});\n\nclass ParentContainer extends Component {\n  state = {\n    searchEmail: \"\",\n    parents: [],\n    email: \"\",\n    status: \"\",\n    showAddNewParent: true,\n    parentName: \"\",\n    parentEmail: \"\",\n    parentAddress: \"\",\n    parentPhone: \"\",\n    guardians: [],\n    showAddNewGuardian: true,\n    guardianName: \"\",\n    guardianEmail: \"\",\n    guardianAddress: \"\",\n    guardianPhone: \"\",\n    role: this.props.role,\n    staffs: [],\n    orgName: \"\",\n    orgAddress: \"\",\n    orgPhone: \"\",\n    orgOpenTime: \"\",\n    orgCloseTime: \"\",\n    hideSearchParent: false,\n    diaperings: [],\n    meals: [],\n    naps: [],\n    medicines: [],\n    incidents: [],\n    date: \"\",\n    noteForStaff: null,\n    noteForParents: null,\n    highlight: null,\n    validationErrorMssg: \"\",\n    guardianValidationErrorMssg: \"\"\n  };\n\n  componentDidMount() {\n    this.getExistingParent();\n    this.getExistingPickup();\n    this.getSchoolInfo();\n    this.getStaffInfo();\n    this.getDiapering();\n    this.getMeals();\n    this.getNaps();\n    this.getMedicines();\n    this.getIncidents();\n    if (this.props.role === \"staff\") this.getNotesForStaff();\n    else if (this.props.role === \"parent\") this.getNotesForParents();\n    console.log(this.props.studentId, \"STUDENT ID\");\n  }\n\n  getDiapering = () => {\n    console.log(\"start of get diapering function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    console.log(\"Date:\", date);\n    console.log(\"Id\", this.props.studentId);\n    this.setState({ date: date });\n    fetch(`/api/student/${this.props.studentId}/diapering/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No diaperings\") {\n            this.setState({ status: \"No diapering found :(\" });\n          } else {\n            let allDiaperings = [];\n            resp.forEach(diapering => {\n              let diaperingRow = [];\n              diaperingRow.push(moment(diapering.time, \"HH:mm:ss\").format(\"hh:mm A\"), diapering.place, diapering.type);\n              allDiaperings.push(diaperingRow);\n            });\n            this.setState({ diaperingData: allDiaperings, diaperings: resp });\n          }\n        }\n      });\n  };\n\n  getMeals = () => {\n    console.log(\"start of get meals function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    console.log(\"Date:\", date);\n    console.log(\"Id\", this.props.studentId);\n    fetch(`/api/student/${this.props.studentId}/meal/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No meals\") {\n            this.setState({ status: \"No Meal found :(\" });\n          } else {\n            let allMeals = [];\n            resp.forEach(meal => {\n              let mealRow = [];\n              mealRow.push(moment(meal.time, \"HH:mm:ss\").format(\"hh:mm A\"), meal.type, meal.food);\n              allMeals.push(mealRow);\n            });\n            this.setState({ mealData: allMeals, meals: resp });\n          }\n        }\n      });\n  };\n\n  getNaps = () => {\n    console.log(\"start of get naps function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    console.log(\"Date:\", date);\n    console.log(\"Id\", this.props.studentId);\n    fetch(`/api/student/${this.props.studentId}/nap/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No naps\") {\n            this.setState({ status: \"No Naps found :(\" });\n          } else {\n            let allnaps = [];\n            resp.forEach(nap => {\n              let napRow = [];\n              napRow.push(moment(nap.startTime, \"HH:mm:ss\").format(\"hh:mm A\"), moment(nap.endTime, \"HH:mm:ss\").format(\"hh:mm: A\"));\n              allnaps.push(napRow);\n            });\n            this.setState({ napData: allnaps, naps: resp });\n          }\n        }\n      });\n  };\n\n  getMedicines = () => {\n    console.log(\"start of get medicines function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    console.log(\"Date:\", date);\n    console.log(\"Id\", this.props.studentId);\n    this.setState({ date: date });\n    fetch(`/api/student/${this.props.studentId}/medicine/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No medicines\") {\n            this.setState({ status: \"No medicines found :(\" });\n          } else {\n            let allmedicines = [];\n            resp.forEach(medicine => {\n              let medicineRow = [];\n              medicineRow.push(moment(medicine.time, \"HH:mm:ss\").format(\"hh:mm A\"), medicine.medName);\n              allmedicines.push(medicineRow);\n            });\n            this.setState({ medicineData: allmedicines, medicines: resp });\n          }\n        }\n      });\n  };\n\n  getIncidents = () => {\n    console.log(\"start of get incidents function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    console.log(\"Date:\", date);\n    console.log(\"Id\", this.props.studentId);\n    this.setState({ date: date });\n    fetch(`/api/student/${this.props.studentId}/incident/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No incidents\") {\n            this.setState({ status: \"No incident found :(\" });\n          } else {\n            let allincidents = [];\n            resp.forEach(incident => {\n              let incidentRow = [];\n              incidentRow.push(moment(incident.time, \"HH:mm:ss\").format(\"hh:mm A\"), incident.incident);\n              allincidents.push(incidentRow);\n            });\n            this.setState({ incidentData: allincidents, incidents: resp });\n          }\n        }\n      });\n  };\n\n  getNotesForStaff = () => {\n    console.log(\"start of get note for staff function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n\n    this.setState({ date: date });\n\n    fetch(`/api/student/${this.props.studentId}/report/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        console.log(\"Resp from notes: \", resp);\n        if (resp) {\n          if (resp !== \"No Notes\") {\n            console.log(resp);\n            this.setState({ noteForStaff: [[resp.noteForStaff]] });\n          }\n        }\n      });\n  };\n\n  getNotesForParents = () => {\n    console.log(\"start of get note for parents function\");\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n\n    this.setState({ date: date });\n\n    fetch(`/api/student/${this.props.studentId}/report/${date}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        console.log(\"Resp from notes: \", resp);\n        if (resp) {\n          if (resp === \"No Notes\") {\n            this.setState({ status: \"No report found :(\" });\n          } else {\n            console.log(resp);\n            this.setState({\n              noteForParents: [[resp.noteForParents]],\n              highlight: [[resp.highlight]]\n            });\n          }\n        }\n      });\n  };\n\n  getSchoolInfo = () => {\n    //use this.props.orgId as parameter to fetch and assign it to appropriate states\n    fetch(`/api/parent/org/${this.props.orgId}`)\n      .then(resp => resp.json())\n      .then(resp =>\n        this.setState({\n          orgName: resp.name,\n          orgAddress: resp.address,\n          orgPhone: resp.phone,\n          orgOpenTime: moment(resp.openTime,\"HH:mm:ss\").format(\"hh:mm A\"),\n          orgCloseTime: moment(resp.closeTime,\"HH:mm:ss\").format(\"hh:mm A\"),\n        })\n      );\n  };\n\n  getStaffInfo = () => {\n    //use this.props.orgId as parameter to fetch and assign to state staffs\n    fetch(`/api/parent/orgstaff/${this.props.orgId}`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No staffs found\") {\n            this.setState({ status: \"No staffs found :(\" });\n          } else {\n            let allStaffs = [];\n            resp.forEach(staff => {\n              let staffRow=[];\n              staffRow.push(staff.name, staff.email)\n              allStaffs.push(staffRow)\n            });\n            this.setState({ staffs:allStaffs });\n          }\n        }\n      });\n  };\n\n  getExistingPickup = () => {\n    fetch(`/api/student/${this.props.studentId}/pickup`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          if (resp === \"No pickup found\") {\n            this.setState({ status: \"No pickup found :(\" });\n          } else {\n            let allGuardians = [];\n            resp.Pickups.forEach(guardian => {\n              let guardianRow =[];\n              guardianRow.push(guardian.name, guardian.phone, guardian.email, guardian.address)\n              allGuardians.push(guardianRow)\n            });\n            this.setState({ guardians:allGuardians });\n          }\n        }\n      });\n  };\n\n  getExistingParent = () => {\n    fetch(`/api/student/${this.props.studentId}/parent`)\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp) {\n          console.log(\"resp:\", resp)\n          if (resp === \"No parent found\") {\n            this.setState({ status: \"No parents found :(\" });\n          } else {\n            let allParents = [];\n            resp.Parents.forEach(parent => {\n              let parentRow=[];\n              parentRow.push(parent.name,parent.phone,parent.email,parent.address)\n              allParents.push(parentRow);\n            });\n            this.setState({ parents: allParents });\n          }\n        }\n      });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSearch = e => {\n    e.preventDefault();\n    if (this.state.searchEmail.trim() === \"\")\n      this.setState({ status: \"Email can't be empty\" })\n    else {\n      console.log(this.state.searchEmail, \"PARENT EMAIL\");\n      fetch(`/api/parent/email/${this.state.searchEmail}`)\n        .then(resp => resp.json())\n        .then(resp => {\n          if (resp.name) {\n            this.setState({ existingParent: resp });\n            const { name, email, phone, address, id } = this.state.existingParent;\n            this.setState({\n              parentId: id,\n              status: `${name}, ${email}, ${phone}, ${address}`\n            });\n          } else {\n            this.setState({ status: \"That email doesn't exist in our database\" });\n          }\n        });\n    }\n  };\n\n  capitalize = name => {\n    const names = name.split(\" \");\n    for (var i = 0; i < names.length; i++) {\n      names[i] = names[i].charAt(0).toUpperCase() + names[i].slice(1);\n    }\n    return names.join(\" \");\n  };\n\n  handleSubmitNewParent = e => {\n    e.preventDefault();\n    let url = window.location.href;\n    url = url.substring(0, url.length - 14);\n\n    let newObj = {\n      email: this.state.parentEmail,\n      address: this.state.parentAddress,\n      phone: this.state.parentPhone,\n      name: this.capitalize(this.state.parentName),\n      baseUrl: url\n    };\n    console.log(newObj);\n    this.setState({ addParentForm: newObj });\n    console.log(\"ADD PARENT FORM\", this.state.addParentForm);\n    console.log(\"STudnet IDDddddddd\", this.props.studentId);\n    fetch(`/api/student/${this.props.studentId}/parent`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(newObj)\n    })\n      .then(resp => resp.json())\n      .then(resp => {\n        console.log(resp);\n        if (resp.id) {\n          this.setState(\n            {\n              status: \"Parent Added!\",\n              parentName: \"\",\n              parentEmail: \"\",\n              parentAddress: \"\",\n              parentPhone: \"\",\n              validationErrorMssg: \"\"\n            },\n            //() => this.getExistingParent()\n          );\n        } else {\n          if (resp.errors) {\n            if (resp.errors[0].message === \"email must be unique\")\n              this.setState({ validationErrorMssg: \"Email already exists in database\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation isEmail on email failed\")\n              this.setState({ validationErrorMssg: \"Invalid email address\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation notEmpty on name failed\")\n              this.setState({ validationErrorMssg: \"Name is required\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation len on phone failed\")\n              this.setState({ validationErrorMssg: \"Invalid phone number\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation notEmpty on address failed\")\n              this.setState({ validationErrorMssg: \"Address is required\", status: \"\" });\n          }\n          else\n            this.setState({ validationErrorMssg: \"Parent could not be added, please check the entered values\", status: \"\" });\n        }\n        this.getExistingParent();\n      });\n  };\n\n  handleSubmitNewGuardian = e => {\n    e.preventDefault();\n    // let url = window.location.href;\n    // url = url.substring(0, url.length - 14);\n\n    let newObj = {\n      email: this.state.guardianEmail,\n      address: this.state.guardianAddress,\n      phone: this.state.guardianPhone,\n      name: this.capitalize(this.state.guardianName)\n      //baseUrl: url\n    };\n\n    this.setState({ addGuardianForm: newObj });\n    fetch(`/api/student/${this.props.studentId}/pickup`, {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(newObj)\n    })\n      .then(resp => resp.json())\n      .then(resp => {\n        console.log(resp);\n        if (resp.id) {\n          this.setState(\n            {\n              status: \"Guardian Added!\",\n              guardianName: \"\",\n              guardianEmail: \"\",\n              guardianAddress: \"\",\n              guardianPhone: \"\",\n              guardianValidationErrorMssg: \"\"\n            },\n            //() => this.getExistingPickup()\n          );\n        } else {\n          if (resp.errors) {\n            if (resp.errors[0].message === \"Validation isEmail on email failed\")\n              this.setState({ guardianValidationErrorMssg: \"Invalid email address\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation notEmpty on name failed\")\n              this.setState({ guardianValidationErrorMssg: \"Name is required\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation len on phone failed\")\n              this.setState({ guardianValidationErrorMssg: \"Invalid phone number\", status: \"\" });\n            else if (resp.errors[0].message === \"Validation notEmpty on address failed\")\n              this.setState({ guardianValidationErrorMssg: \"Address is required\", status: \"\" });\n          }\n          else\n            this.setState({ guardianValidationErrorMssg: \"Guardian could not be added, please check the entered values\", status: \"\" });\n        }\n        this.getExistingPickup();\n      });\n  };\n\n  handleAddNewParent = e => {\n    e.preventDefault();\n    this.setState({\n      addParentForm: {},\n      showAddNewParent: false,\n      hideSearchParent: true,\n      status: \"\"\n    });\n  };\n\n  handleAddNewGuardian = e => {\n    e.preventDefault();\n    this.setState({\n      addGuardianForm: {},\n      showAddNewGuardian: false,\n      status: \"\"\n    });\n  };\n\n  makeAssociation = async e => {\n    console.log(\"association func\")\n    e.preventDefault();\n    await fetch(\"/api/parentstudent\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({\n        parentId: this.state.parentId,\n        studentId: this.props.studentId\n      })\n    }).then(this.getExistingParent());\n  };\n\n  deleteAssociation = e => {\n    const data = {\n      studentId: this.props.studentId,\n      parentId: e.target.name\n    };\n    console.log(data);\n    fetch(\"/api/\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    }).then(() => this.getExistingParent());\n  };\n\n  editParentInfo = e => {\n    const data = { parentId: e.target.name };\n    fetch(\"/api/\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    }).then(() => this.getExistingParent());\n  };\n\n  renderSearchParentByEmailForm = () => {\n    const { classes } = this.props;\n    if (!this.state.hideSearchParent)\n      return (\n        <form>\n          <TextField\n            name=\"searchEmail\"\n            value={this.state.searchEmail}\n            onChange={this.handleChange}\n            id=\"addParents\"\n            label=\"Add Parents by Email\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n          <Button\n            className={classes.searchSubmit}\n            onClick={this.handleSearch}\n            type=\"submit\"\n          >\n            Search\n          </Button>\n        </form>\n      );\n  };\n\n  renderAddParentForm() {\n    const { classes } = this.props;\n    if (this.state.role === \"staff\")\n      return (\n        <div className=\"add-new-parent\">\n          {this.renderSearchParentByEmailForm()}\n\n          {this.state.addParentForm && (\n            <form>\n              <TextField\n                name=\"parentName\"\n                onChange={this.handleChange}\n                value={this.state.parentName}\n                id=\"ParentName\"\n                label=\"Parent's Name\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"parentPhone\"\n                onChange={this.handleChange}\n                value={this.state.parentPhone}\n                id=\"ParentPhone\"\n                label=\"Parent's Phone\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"parentEmail\"\n                onChange={this.handleChange}\n                value={this.state.parentEmail}\n                id=\"ParentEmail\"\n                label=\"Parent's Email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"parentAddress\"\n                onChange={this.handleChange}\n                value={this.state.parentAddress}\n                id=\"ParentAddress\"\n                label=\"Parent's Address\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <Button\n                className={classes.registerParent}\n                onClick={this.handleSubmitNewParent}\n                type=\"submit\"\n              >\n                Register and Email New Parent\n              </Button>\n            </form>\n          )}\n          <div>{this.state.status}</div>\n          <div className=\"validationerror\">{this.state.validationErrorMssg}</div>\n          {this.state.existingParent && (\n            <Button onClick={this.makeAssociation}>\n              Add Existing Parent to Child\n            </Button>\n          )}\n          {this.state.showAddNewParent && (\n            <Button name=\"new\" onClick={this.handleAddNewParent}>\n              Create New Parent Account\n            </Button>\n          )}\n        </div>\n      );\n    else if (this.state.role === \"parent\") return <div />;\n  }\n\n  renderGuardianForm() {\n    const { classes } = this.props;\n    if (this.state.role === \"parent\")\n      return (\n        <div>\n          {this.state.addGuardianForm && (\n            <form>\n              <TextField\n                name=\"guardianName\"\n                onChange={this.handleChange}\n                value={this.state.guardianName}\n                id=\"GuardianName\"\n                label=\"Guardian's Name\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"guardianPhone\"\n                onChange={this.handleChange}\n                value={this.state.guardianPhone}\n                id=\"GuardianPhone\"\n                label=\"Guardian's Phone\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"guardianEmail\"\n                onChange={this.handleChange}\n                value={this.state.guardianEmail}\n                id=\"GuardianEmail\"\n                label=\"Guardian's Email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n\n              <TextField\n                name=\"guardianAddress\"\n                onChange={this.handleChange}\n                value={this.state.guardianAddress}\n                id=\"GuardianAddress\"\n                label=\"Guardian's Address\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"text\"\n              />\n              <div>{this.state.status}</div>\n              <div>{this.state.guardianValidationErrorMssg}</div>\n              <Button\n                className={classes.submitGuardian}\n                onClick={this.handleSubmitNewGuardian}\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </form>\n          )}\n          {this.state.showAddNewGuardian && (\n            <Button name=\"new\" onClick={this.handleAddNewGuardian}>\n              Add a Guardian\n            </Button>\n          )}\n        </div>\n      );\n    else if (this.state.role === \"staff\") return <div />;\n  }\n\n  renderSchoolInfo() {\n    const { classes } = this.props;\n    if (this.state.role === \"parent\")\n      return (\n        <ExpansionPanel>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>School</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n        <div>\n          <ResponsiveTable title=\"School Information\" columns={[\"Name\", \"Phone\", \"Address\", \"Open Time\", \"Close Time\"]} data={[[this.state.orgName, this.state.orgPhone, this.state.orgAddress, this.state.orgOpenTime, this.state.orgCloseTime]]} />\n        </div>\n        </ExpansionPanelDetails>\n        </ExpansionPanel>\n      );\n  }\n\n  renderStaffInfo() {\n    const { classes } = this.props;\n    if (this.state.role === \"parent\")\n      return (\n        <ExpansionPanel>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>Staff</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div>\n              <ResponsiveTable title=\"Staff\" columns={[\"Name\", \"Email\"]} data={this.state.staffs} />\n            </div>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      );\n  }\n\n  renderIncidents() {\n    \n    if (this.state.incidents.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Incidents\" columns={[\"Time\", \"Incident\"]} data={this.state.incidentData} />\n        </div>\n      );\n    }\n  }\n\n  renderMeds() {\n    \n    if (this.state.medicines.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Medicines Administered\" data={this.state.medicineData} columns={[\"Time\", \"Medicine\"]} />\n        </div>\n      );\n    }\n  }\n\n  renderNaps() {\n    \n    if (this.state.naps.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Naps\" data={this.state.napData} columns={[\"Start Time\", \"End Time\"]} />\n        </div>\n      );\n    }\n  }\n\n  renderMeals() {\n    \n    if (this.state.meals.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable\n            title=\"Meals\"\n            columns={[\"Time\", \"Meal\", \"Food\"]}\n            data={this.state.mealData}\n          />\n        </div>\n      );\n    }\n  }\n\n  renderDiaperings() {\n    \n    if (this.state.diaperings.length === 0) {\n      return <div />;\n    } else {\n      return (\n        <div>\n          <ResponsiveTable title=\"Diaper/Toilet\" columns={[\"Time\", \"Place\", \"Type\"]} data={this.state.diaperingData} />\n        </div>\n      );\n    }\n  }\n\n  renderNoteForParents() {\n    if (this.props.role === \"parent\") {\n      \n      if (!this.state.noteForParents && !this.state.highlight) {\n        return <div />;\n      }\n      if (this.state.noteForParents && this.state.highlight) {\n        return (\n          <div>\n            <div>\n              <ResponsiveTable title=\"Note for Parents\" columns={[\"Note\"]} data={this.state.noteForParents} />\n            </div>\n            <div>\n              <ResponsiveTable title=\"Highlight of the day\" columns={[\"Highlight\"]} data={this.state.highlight} />\n            </div>\n          </div>\n        );\n      }\n      if (this.state.highlight) {\n        return (\n          <div>\n              <ResponsiveTable title=\"Highlight of the day\" columns={[\"Highlight\"]} data={this.state.highlight} />\n            </div>\n        );\n      }\n      if (this.state.noteForParents) {\n        return (\n          <div>\n              <ResponsiveTable title=\"Note for Parents\" columns={[\"Note\"]} data={this.state.noteForParents} />\n            </div>\n        );\n      }\n    }\n  }\n\n  renderNoteForStaff() {\n    if (this.props.role === \"staff\") {\n      \n      if (!this.state.noteForStaff) {\n        return <div />;\n      } else {\n        return (\n          <div>\n          <ResponsiveTable title=\"Note for Staff\" columns={[\"Note\"]} data={this.state.noteForStaff} />\n        </div>\n        );\n      }\n    }\n  }\n\n  renderGuardianTable() {\n    \n    if (this.state.guardians.length > 0) {\n      return (\n        <div>\n          <ResponsiveTable title=\"Guardians\" columns={[\"Name\", \"Phone\", \"Email\",\"Address\"]} data={this.state.guardians} />\n       </div>\n      );\n    } else {\n      return <div>No Guardian added</div>;\n    }\n  }\n\n  renderParentTable() {\n    \n    if (this.state.parents.length > 0) {\n      return (\n       <div>\n          <ResponsiveTable title=\"Parents\" columns={[\"Name\", \"Phone\", \"Email\",\"Address\"]} data={this.state.parents} />\n       </div>\n      );\n    } else {\n      return <div>No Parents added</div>;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className={classes.root}>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>\n                Today's Report\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.block}>\n              <div>\n                {this.renderNoteForStaff()}\n                {this.renderNoteForParents()}\n                {this.renderDiaperings()}\n                {this.renderMeals()}\n                {this.renderNaps()}\n                {this.renderMeds()}\n                {this.renderIncidents()}\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>\n                Student Information\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.block}>\n        \n              <div>\n                <ResponsiveTable title=\"Student Information\" columns={[\"Address\", \"DOB\", \"Allergies\", \"Medications\", \"Note\", \"Doctor\"]} data={[[this.props.address, this.props.dob, this.props.allergies, this.props.medication, this.props.notes, this.props.doctor]]} />\n              </div>\n    \n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>Parents</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.block}>\n              {this.renderParentTable()}\n            </ExpansionPanelDetails>\n            {this.renderAddParentForm()}\n          </ExpansionPanel>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>Guardians</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.block}>\n              {this.renderGuardianTable()}\n            </ExpansionPanelDetails>\n            {this.renderGuardianForm()}\n          </ExpansionPanel>\n\n          {this.renderSchoolInfo()}\n          {this.renderStaffInfo()}\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>\n                Report Archive\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.block}>\n              <div>\n                <Link to={{ pathname: '/archive', state: { studentId: this.props.studentId, role: this.props.role, name: this.props.name } }}>Click here to see {this.props.name}'s report archive </Link>\n              </div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </div>\n      </div>\n    );\n  }\n}\n\nParentContainer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ParentContainer);\n"]},"metadata":{},"sourceType":"module"}